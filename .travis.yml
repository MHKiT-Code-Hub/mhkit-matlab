language: minimal

stages:
  - test
  
jobs:
  include:
    - stage: test
      language: matlab
      before_install:
        - sudo apt update
        - sudo apt install software-properties-common
        - sudo add-apt-repository main
        - sudo add-apt-repository universe
        - sudo add-apt-repository restricted
        - sudo add-apt-repository multiverse  
        - sudo add-apt-repository ppa:deadsnakes/ppa -y
        - sudo apt-get update
        - sudo apt install python3.8
        - python3.8 --version
        - sudo apt install python3.8-distutils
        - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        - python3.8 get-pip.py
      install: 
        - python3.8 -m pip install -e .
        - git clone --depth 1 https://github.com/psf/requests.git requests
        - cd requests
        - python3.8 -m pip install requests
        - cd ..
        - git clone --depth 1 https://github.com/MHKiT-Software/MHKiT-Python mhkit-python
        - cd mhkit-python
        - python3.8 -m pip install -e .

      script:
        - python3.8 -m pip install -e .
        - cd ..
        - matlab -batch "ls"
        - python3.8 -m pip install -e .
        - matlab -batch "import mhkit.*, matlab.addons.toolbox.installToolbox('mhkit.mltbx'), [ED, AP] = mhkit.river.performance.circular(30), print(ED), print(AP)"
        - matlab -batch "import mhkit.*, matlab.addons.toolbox.installToolbox('mhkit.mltbx'), import mhkit.*, cd mhkit/tests, results = runTests(), assertSuccess(results);"
        
      if: branch = master
