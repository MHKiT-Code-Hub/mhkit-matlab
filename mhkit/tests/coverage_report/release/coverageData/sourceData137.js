var sourceData137 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB-2/mhkit/wave/IO/SWAN/swan_read_block.m","RawFileContents":["function data=swan_read_block(swan_file)","","%%%%%%%%%%%%%%%%%%%%","%     Reads in SWAN ASCII block format output and returns a data structure","%     containing modeled values and assocuated metadata","%","% Parameters","% ------------","%     swan_file : string","%         SWAN file name to import","%","% Returns","% ---------","%     data: Structure","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","datatp = py.mhkit.wave.io.swan.read_block(swan_file);","datac=cell(datatp);","datapd=datac{1};","datamat=datac{2};","","for raw_key = py.list(keys(datapd))","   key = raw_key{1};","   value = datapd{key};","   new_string = regexprep(string(key),' ','_');","   sha=cell(value.values.shape);","   x=int64(sha{1,1});","   y=int64(sha{1,2});","   vals = double(py.array.array('d',py.numpy.nditer(value.values,pyargs(\"flags\",{\"refs_ok\"}))));","   vals=reshape(vals,[x,y]);","   data.(new_string).values = vals.';","   meta = datamat{key};","   for mat_key = py.list(keys(meta))","       key_meta = mat_key{1};","       str_meta = string(key_meta);","       met_val = meta{key_meta};","       if isa(met_val,'py.str')","         met_val = string(met_val);","       end","       data.(new_string).(str_meta)= met_val;","   end","end","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},"Statement":[{"LineNumber":17,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":18,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":19,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":20,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":22,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":23,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":24,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":25,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":26,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":27,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":28,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":29,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":96,"ContinuedLine":false},{"LineNumber":30,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":31,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":32,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":33,"Hits":4,"StartColumnNumbers":3,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":34,"Hits":16,"StartColumnNumbers":7,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":35,"Hits":16,"StartColumnNumbers":7,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":36,"Hits":16,"StartColumnNumbers":7,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":37,"Hits":16,"StartColumnNumbers":7,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":38,"Hits":12,"StartColumnNumbers":9,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":40,"Hits":16,"StartColumnNumbers":7,"EndColumnNumbers":45,"ContinuedLine":false}]}}