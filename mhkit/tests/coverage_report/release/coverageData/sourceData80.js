var sourceData80 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/river/IO/delft_3d/delft_3d_interpolate_to_centerline.m","RawFileContents":["function result = delft_3d_interpolate_to_centerline(points, values, xi)","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%","% Interpolates data to points along a centerline.","%","% Parameters","% ------------","%    points: 2-D ndarray of floats","%       Data point coordinates","%    values: ndarray of float","%       Data values","%    xi: 2-D ndarray of floats","%       Points at which to interpolate data","%","% Returns","% ---------","%    result: ndarray","%        Array of interpolated values","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","    % Guard to check type of points","    if ~isnumeric(points)","        error('MATLAB:delft_3d_interpolate_to_centerline:InvalidInput', 'points must be a numeric array.');","    end","","    % Guard to check type of values","    if ~isnumeric(values)","        error('MATLAB:delft_3d_interpolate_to_centerline:InvalidInput', 'values must be a numeric array.');","    end","","    % Guard to check type of xi","    if ~isnumeric(xi)","        error('MATLAB:delft_3d_interpolate_to_centerline:InvalidInput', 'xi must be a numeric array.');","    end","","    % Transposed to get the same shape as an input DataFrame","    % Note that points and xi can be 2d arrays and values can only be a 1d array","    points = py.numpy.transpose(py.numpy.asarray(points));","    values = py.numpy.asarray(values);","    xi = py.numpy.transpose(py.numpy.asarray(xi));","","    python_result = py.scipy.interpolate.griddata(points, values, xi);","","    result = double(python_result);","end",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":72,"ContinuedLine":false},"Statement":[{"LineNumber":23,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":24,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":107,"ContinuedLine":false},{"LineNumber":28,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":29,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":107,"ContinuedLine":false},{"LineNumber":33,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":34,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":103,"ContinuedLine":false},{"LineNumber":39,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":40,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":41,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":43,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":45,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false}]}}