var sourceData4 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB-2/mhkit/dolfyn/io/dolfyn_read.m","RawFileContents":["function ds=dolfyn_read(filename,options)","","%%%%%%%%%%%%%%%%%%%%","%     Read a binary Nortek (e.g., .VEC, .wpr, .ad2cp, etc.) or RDI","%    (.000, .PD0, .ENX, etc.) data file.","%","% Parameters","% ------------","%     filename: string","%         Filename of instrument file to read.","%     userdata: bool or string (optional)","%         true, false, or string of userdata.json filename (default true)","%         Whether to read the '<base-filename>.userdata.json' file.","%     nens: nan, int, or 2-element array (optional)","%         nan (default: read entire file), int, or 2-element tuple","%         (start, stop) Number of pings to read from the file.","%","%     call with options -> dolfyn_read(filename,'userdata',false,'nens',12)","%","% Returns","% ---------","%     ds: structure","%         Structure from the binary instrument data","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","    arguments","        filename","        options.userdata = true;","        options.nens = nan;","    end","","    % check to see if the filename input is a string","    if ~ischar(filename)","        ME = MException('MATLAB:dolfyn_read','filename must be a string');","        throw(ME);","    end","","    % check to see if the file exists","    if ~isfile(filename)","        ME = MException('MATLAB:dolfyn_read','file does not exist');","        throw(ME);","    end","","    % check to make sure userdata is bool or string","    if ~isa(options.userdata, 'logical') && ~isa(options.userdata, 'string')","        ME = MException('MATLAB:dolfyn_read','userdata must be a logical or string');","        throw(ME);","    end","","    % check to make sure nens is numeric or nan","    if ~all(isa(options.nens, 'numeric'))","        ME = MException('MATLAB:dolfyn_read','nens must be numeric or nan');","        throw(ME);","    end","","    % check to make sure if nens is numeric that its length is equal to 1 or 2","    if ~isnan(options.nens)","        if length(options.nens) < 1 || length(options.nens) > 2","            ME = MException('MATLAB:dolfyn_read','nens must be a single value or tuple');","            throw(ME);","        end","    end","","    % Loop over binary readers until we find one that works.","    fun_map = struct(  'nortek',{@read_nortek},...","                       'signature',{@read_signature},...","                       'rdi',{@read_rdi});","","    reader = get_filetype();","","    if isnan(reader)","        ME = MException('MATLAB:dolfyn_read',['File %s is not recognized' ...","            [' as a file-type that is readable by DOLfYN. If you think' ...","            ' it should be readable, try using the appropriate read' ...","            ' function (`read_rdi`, `read_nortek`, or `read_signature`) ' ...","            'found in dolfyn.io'], filename]);","        throw(ME);","    else","        try","            ds = feval(fun_map.(reader),...","                filename,'userdata',options.userdata,'nens',options.nens);","        catch e","            fprintf(\"\\nError in read: %s\\n\", e.message);","        end","    end","","    function type = get_filetype()","    % Detects whether the file is a Nortek, Signature (Nortek), or RDI","    % file by reading the first few bytes of the file.","    %","    % Returns","    % =======","    %    NaN - Doesn't match any known pattern","    %    'signature' - for Nortek signature files","    %    'nortek' - for Nortek (Vec, AWAC) files","    %    'RDI' - for RDI files","","        fid = fopen(filename,'r', 'n', 'UTF-8');      % open disk file","        bytes = fread(fid, 2, \"uint8\");","        code = dec2hex(bytes, 2);","        code = convertCharsToStrings(strcat(code(1,:),code(2,:)));","        if strcmpi(code,'7f79') || strcmpi(code,'7f7f')","            type = 'rdi';","        elseif strcmpi(code, 'a50a')","            type = 'signature';","        elseif strcmpi(code, 'a505')","            type = 'nortek';","        else","            type = nan;","        end","    end","","end","",""],"CoverageDisplayDataPerLine":{"Function":[{"LineNumber":1,"Hits":22,"StartColumnNumbers":0,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":87,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false}],"Statement":[{"LineNumber":28,"Hits":19,"StartColumnNumbers":27,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":29,"Hits":8,"StartColumnNumbers":23,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":33,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":34,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":35,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":39,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":40,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":41,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":45,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":46,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":85,"ContinuedLine":false},{"LineNumber":47,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":51,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":52,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":53,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":57,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":58,"Hits":14,"StartColumnNumbers":8,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":59,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":89,"ContinuedLine":false},{"LineNumber":60,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":65,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":66,"Hits":22,"StartColumnNumbers":23,"EndColumnNumbers":52,"ContinuedLine":true},{"LineNumber":67,"Hits":22,"StartColumnNumbers":23,"EndColumnNumbers":42,"ContinuedLine":true},{"LineNumber":69,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":71,"Hits":22,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":72,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":73,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":71,"ContinuedLine":true},{"LineNumber":74,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":68,"ContinuedLine":true},{"LineNumber":75,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":73,"ContinuedLine":true},{"LineNumber":76,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":true},{"LineNumber":77,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":79,"Hits":22,"StartColumnNumbers":8,"EndColumnNumbers":11,"ContinuedLine":false},{"LineNumber":80,"Hits":22,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":81,"Hits":22,"StartColumnNumbers":16,"EndColumnNumbers":74,"ContinuedLine":true},{"LineNumber":82,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":83,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":98,"Hits":22,"StartColumnNumbers":8,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":99,"Hits":22,"StartColumnNumbers":8,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":100,"Hits":22,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":101,"Hits":22,"StartColumnNumbers":8,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":102,"Hits":22,"StartColumnNumbers":8,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":103,"Hits":6,"StartColumnNumbers":12,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":104,"Hits":16,"StartColumnNumbers":8,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":105,"Hits":9,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":106,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":107,"Hits":7,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":109,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":23,"ContinuedLine":false}]}}