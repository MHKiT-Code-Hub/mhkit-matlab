var sourceData180 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/wave/resource/peak_period.m","RawFileContents":["function Tp=peak_period(S)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","% Calculates wave energy period from spectra","%","% Parameters","% ------------","%    S: Spectral Density (m^2/Hz)","%       Pandas data frame","%           To make a pandas data frame from user supplied frequency and spectra","%           use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(frequency,spectra)","%","%       OR","%","%       structure of form:","%           S.spectrum: Spectral Density (m^2/Hz)","%","%           S.type: String of the spectra type, i.e. Bretschneider,","%           time series, date stamp etc.","%","%           S.frequency: frequency (Hz)","%","% Returns","% ---------","%    Tp float","%        Wave Peak Period (s)","%","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","py.importlib.import_module('mhkit');","py.importlib.import_module('mhkit_python_utils');","","if (isa(S,'py.pandas.core.frame.DataFrame')~=1)","    if (isstruct(S)==1)","        x=size(S.spectrum);","        li=py.list();","        if x(2)>1","            for i = 1:x(2)","                app=py.list(S.spectrum(:,i));","                li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","","            end","            S=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(S.frequency(:,1),li,int32(x(2)));","        elseif x(2)==1","            S=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(S.frequency,py.numpy.array(S.spectrum),int32(x(2)));","        end","","    else","        ME = MException('MATLAB:significant_wave_height','S needs to be a structure or Pandas dataframe, use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas to create one');","        throw(ME);","    end","end","","Tp=py.mhkit.wave.resource.peak_period(S);","Tp=double(Tp.values);","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},"Statement":[{"LineNumber":31,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":32,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":34,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":35,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":36,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":37,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":38,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":39,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":40,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":41,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":44,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":104,"ContinuedLine":false},{"LineNumber":45,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":46,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":123,"ContinuedLine":false},{"LineNumber":50,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":182,"ContinuedLine":false},{"LineNumber":51,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":55,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":56,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false}]}}