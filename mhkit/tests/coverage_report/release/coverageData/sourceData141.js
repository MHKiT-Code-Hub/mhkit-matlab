var sourceData141 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB-2/mhkit/wave/IO/hindcast/request_wpto_cached.m","RawFileContents":["function data = request_wpto(data_type, parameter, lat_lon, year, api_key)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%","%     Returns data from the WPTO wave hindcast hosted on AWS at the specified latitude and longitude point(s),","%     or the closest available pont(s).","%     Visit https://registry.opendata.aws/wpto-pds-us-wave/ for more information about the dataset and available","%     locations and years.","%     NOTE: To access the WPTO hindcast data, you will need to configure h5pyd for data access on HSDS.","%     Please see the WPTO_hindcast_example notebook for more information.","%","%     Parameters","%     ----------","%         data_type : string","%             Data set type of interest","%             Options: \"3-hour\" \"1-hour\"","%         parameter: string or list of strings","%             Dataset parameter to be downloaded","%             3-hour dataset options: 'directionality_coefficient', 'energy_period', 'maximum_energy_direction'","%                 'mean_absolute_period', 'mean_zero-crossing_period', 'omni-directional_wave_power', 'peak_period'","%                 'significant_wave_height', 'spectral_width', 'water_depth'","%             1-hour dataset options: 'directionality_coefficient', 'energy_period', 'maximum_energy_direction'","%                 'mean_absolute_period', 'mean_zero-crossing_period', 'omni-directional_wave_power', 'peak_period'","%                 'significant_wave_height', 'spectral_width', 'water_depth', 'maximim_energy_direction',","%                 'mean_wave_direction', 'frequency_bin_edges', 'directional_wave_spectrum'","%         lat_lon: tuple or list of tuples","%             Latitude longitude pairs at which to extract data.","%         year : float","%             Year to be accessed. The years 1979-2010 available.","%         api_key : string","%             API key obtained from https://developer.nrel.gov/signup/","%","%      Returns","%      -------","%         data : struct","%             Data indexed by datetime with columns named for parameter and cooresponding metadata index","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","    if ~isa(data_type,'string') & ~isa(data_type,'char')","        error('ERROR: data_type must be a string or char')","    end","    if ~isstring(parameter)","        error('ERROR: parameter must be a string or string array')","    end","    if ~isa(lat_lon,'numeric')","        error('ERROR: lat_lon must be a double or double array')","    end","    if ~isa(year, 'numeric')","        error('ERROR: year must be numeric')","    end","    if ~isa(api_key,'string') & ~isa(api_key,'char')","        error('ERROR: api_key must be a string or string array')","    end","","","    % set weboptions","    options = weboptions('Timeout',30);","","    % determine region of lat_lon","    region = region_selection(lat_lon,data_type);","","    % set domain","    if isequal(data_type,'1-hour')","        dom = ['&domain=%2Fnrel%2FUS_wave%2Fvirtual_buoy%2F' region '%2F' region '_virtual_buoy_' num2str(year) '.h5'];","    elseif isequal(data_type,'3-hour')","        dom = ['&domain=%2Fnrel%2FUS_wave%2F' region '%2F' region '_wave_' num2str(year) '.h5'];","    end","","    % get links to the databases","    baseURL = ['https://developer.nrel.gov/api/hsds/?api_key=' api_key dom];","    root = cached_webread(baseURL, options);","    groupsURL = ['https://developer.nrel.gov/api/hsds/groups/' root.root '/links?api_key=' api_key dom];","    groups = cached_webread(groupsURL, options);","    groups = struct2table(groups.links);","","    % get standard parameters","    if isequal(data_type, \"1-hour\")","        vars = [\"time_index\",\"meta\",\"coordinates\",\"frequency\",\"direction\"];","    else","        vars = [\"time_index\",\"meta\",\"coordinates\"];","    end","    for i=1:length(vars)","        ID = groups.id(find(strcmpi(vars(i),groups.title)));","        URL = ['https://developer.nrel.gov/api/hsds/datasets/' ID{:} '/value?api_key=' api_key dom];","        temp = cached_webread(URL,options);","","        if isequal(vars{i},\"time_index\")","            standard_params.(vars(i)) = datetime(temp.value,'InputFormat','yyyy-MM-dd HH:mm:ssXXX',...","                'TimeZone','UTC');","        else","            standard_params.(vars(i)) = temp.value;","        end","    end","","    % find index for each location","    for y = 1:size(lat_lon,1)","        gid = lat_lon(y,:);","        radius = [abs(standard_params.coordinates(:,1)-gid(1)) abs(standard_params.coordinates(:,2)-gid(2))];","        radius(:,3) = sqrt(radius(:,1).^2 + radius(:,2).^2);","        idx(y) = find(radius(:,3)==min(radius(:,3))); % find index of closest location","    end","","    % create metadata struct & get parameter data","    fns_meta = [\"water_depth\",\"latitude\",\"longitude\",\"distance_to_shore\",\"timezone\",\"jurisdiction\"];","    for y=1:length(idx)","        for x=1:length(fns_meta)","            fd = standard_params.meta{idx(y)};","            meta(y).(fns_meta{x}) = fd{x};","        end","        for z = 1:length(parameter)","            paramID = groups.id(find(strcmpi(parameter(z),groups.title)));","            if isequal(parameter(z),'directional_wave_spectrum')","                continue","            else","                paramURL = ['https://developer.nrel.gov/api/hsds/datasets/' paramID{:} '/value?api_key=' api_key '&select=[:,' num2str(idx(y)-1) ']' dom];","            end","            param = cached_webread(paramURL,options);","            data(y).(parameter(z)) = param.value;","        end","    end","","    % handle extraction of directional wave spectrum if requested","    time_length = length(standard_params.time_index);","    if contains('directional_wave_spectrum',parameter)","        for y = 1:length(idx)","            for z = 1:time_length/486","                i1 = num2str((z-1)*486);","                i2 = num2str(z*486);","                paramURL = ['https://developer.nrel.gov/api/hsds/datasets/' paramID{:} '/value?api_key=' api_key '&select=[' i1 ':' i2 ',:,:,' num2str(idx(y)-1) ']' dom];","                fprintf('\\n');","                param = cached_webread(paramURL,options);","                try","                    dws = cat(1,dws,param.value);","                catch","                    dws = param.value;","                end","            end","            data(y).directional_wave_spectrum = dws;","            clear dws","        end","    end","","    % create final output struct for data","    for i=1:length(idx)","        data(i).time = standard_params.time_index;","        if contains('directional_wave_spectrum',parameter)","            data(i).frequency = standard_params.frequency;","            data(i).direction = standard_params.direction;","        end","        data(i).metadata = meta(i);","    end","end","","","% function data = cached_webread(url, options)","%     % Define the fixed cache directory","%     cacheDir = fullfile(fileparts(mfilename('fullpath')), '..', '..', '..', '..' , 'cache');","","","%     if nargin < 3","%         forceAddDate = false;","%     end","","%     % Create the cache directory if it does not exist","%     if ~exist(cacheDir, 'dir')","%         mkdir(cacheDir);","%     end","","%     % Create a hash of the URL to use as a cache filename","%     cacheFilename = fullfile(cacheDir, [md5hash(url) '.mat']);","","%     % Check if the file is in the cache","%     if exist(cacheFilename, 'file') && ~forceAddDate","%         % Check the age of the cache","%         cacheInfo = dir(cacheFilename);","%         cacheAge = datetime('now', 'Format', 'yyyy-MM-dd HH:mm:ss') - datetime(cacheInfo.datenum, 'ConvertFrom', 'datenum');","","%         if days(cacheAge) <= 1","%             disp(['Data found in cache. Using cached version.']);","%             load(cacheFilename, 'data');","%             return;","%         else","%             disp(['Cache is older than 1 day. Redownloading...']);","%         end","%     else","%         disp(['Cache not found or forceAddDate is true. Redownloading...']);","%     end","","%     % Perform webread","%     disp(url);","%     fprintf('\\n');","%     disp(\"Performing webread...\");","%     data = webread(url, options);","%     disp(\"Webread completed.\");","","%     % Save raw data to cache","%     save(cacheFilename, 'data');","","%     % Add the current date to the cache","%     % if ~forceAddDate","%     %     addDateToCache(cacheFilename);","%     % end","% end","","% function addDateToCache(cacheFilename)","%     save(cacheFilename, 'lastUpdated', '-append');","% end","","% function hash = md5hash(str)","%     md = java.security.MessageDigest.getInstance('MD5');","%     md.update(uint8(str));","%     hashBytes = typecast(md.digest, 'uint8');","%     hash = sprintf('%02x', hashBytes);","% end","","","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":74,"ContinuedLine":false},"Statement":[{"LineNumber":40,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":41,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":43,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":44,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":46,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":47,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":49,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":50,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":52,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":53,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":58,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":61,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":64,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":65,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":119,"ContinuedLine":false},{"LineNumber":66,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":67,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":96,"ContinuedLine":false},{"LineNumber":71,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":72,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":73,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":104,"ContinuedLine":false},{"LineNumber":74,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":75,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":78,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":79,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":81,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":83,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":84,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":85,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":100,"ContinuedLine":false},{"LineNumber":86,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":88,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":89,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":98,"ContinuedLine":false},{"LineNumber":90,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":34,"ContinuedLine":true},{"LineNumber":92,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":97,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":98,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":99,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":109,"ContinuedLine":false},{"LineNumber":100,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":101,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":105,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":100,"ContinuedLine":false},{"LineNumber":106,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":107,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":108,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":109,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":111,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":112,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":113,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":114,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":116,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":154,"ContinuedLine":false},{"LineNumber":118,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":119,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":124,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":125,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":126,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":127,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":128,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":129,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":130,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":170,"ContinuedLine":false},{"LineNumber":131,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":132,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":133,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":134,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":135,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":136,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":139,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":140,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":145,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":146,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":147,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":148,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":149,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":151,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false}]}}