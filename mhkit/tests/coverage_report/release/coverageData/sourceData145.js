var sourceData145 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/utils/toggleToolbox.m","RawFileContents":["% TOGGLETOOLBOX              Utility to enable/disable MATLAB toolboxes.","%","% S = TOGGLETOOLBOX()","% S = TOGGLETOOLBOX('')","% S = TOGGLETOOLBOX('all') queries the on/off states of all installed","% toolboxes.","%","% M = TOGGLETOOLBOX('names') returns the full names / directory names map","% [M] applicable to the current MATLAB installation.","%","% S = TOGGLETOOLBOX(toolbox, state) queries or sets the on/off state of the","% MATLAB toolbox [toolbox] to [state]. The string or cellstring [toolbox] may","% be equal to the toolbox' installation directory name (the same as used by","% ver()), or the toolbox' full name. The string [state] may be one of 'on',","% 'enable' (equivalent), 'off' or 'disable (equivalent), or 'query'. The","% return argument [S] is a structure containing the toolbox name(s) as","% fields, with the on/off state represented as true/false, and the MATLAB","% path as it was before the call.","%","% S = TOGGLETOOLBOX(..., permanency) for string [permanency] equal to","% 'permanent' will attempt to make the change persist between different","% MATLAB sessions. For [permanency] equal to 'temporary' (the default), the","% change will only last for the remainder of the current session.","%","% TOGGLETOOLBOX(S0) will reset the on/off states of all toolboxes to the","% states contained in [S0], where [S0] is a structure previously returned by","% TOGGLETOOLBOX() as outlined above.","%","% Disabling a toolbox is done by removing the relevant directories from the","% MATLAB path. Since the order of the path is important for name resolution,","% TOGGLETOOLBOX() attempts to keep the order of all paths as close to MATLAB's","% startup path as possible. Calling TOGGLETOOLBOX() multiple times for different","% toolboxes and arbitrary on/off states should not affect the overall path","% order -- calling TOGGLETOOLBOX('all', 'on') afterwards results in a path","% identical to the startup path.","%","% Note that TOGGLETOOLBOX() generates a MAT file for both performance and","% permanence between MATLAB sessions. Please make sure that TOGGLETOOLBOX()","% is located in a directory with write access.","%","%","% EXAMPLE SESSION:","%","%     >> M = toggleToolbox('names')%","%     M =","%         'aero'             'Aerospace Toolbox'","%         'aeroblks'         'Aerospace Blockset'","%         'bioinfo'          'Bioinformatics Toolbox'","%         'comm'             'Communications Toolbox'","%         ...","%","%    >> S = toggleToolbox({'Aerospace Toolbox' 'Wavelet Toolbox'}, 'query')","%    S =","%           aero: 1","%        wavelet: 1","%","%    >> w = ver('wavelet')","%    w =","%           Name: 'Wavelet Toolbox'","%        Version: '4.5'","%        Release: '(R2010a)'","%           Date: '25-Jan-2010'","%","%    >> S = toggleToolbox({'Aerospace Toolbox' 'Wavelet Toolbox'}, 'off');","%    >> toggleToolbox({'Aerospace Toolbox' 'Wavelet Toolbox'}, 'query')","%    ans =","%           aero: 0","%        wavelet: 0","%","%    >> w = ver('wavelet')","%    w =","%    0x0 struct array with fields:","%        Name","%        Version","%        Release","%        Date","%","%    >> toggleToolbox(S);","%    >> toggleToolbox({'Aerospace Toolbox' 'Wavelet Toolbox'}, 'query')","%    ans =","%           aero: 1","%        wavelet: 1","%","%    >> % Cross-platform developer mode:","%    >> S = toggleToolbox('all', 'off');","%","% See also ver, verLessThan, matlabroot, warning.","function varargout = toggleToolbox(varargin)","","    %% Initialize","    % ====================================================","","    % Default msg ID for error/warning messages","    msgId = mfilename();","","    % Store toolbox states in a store file","    storefile = fullfile(fileparts(mfilename('fullpath')), ...","                         'toolbox_states.mat');","","","    % Names should be given as directory names, but who on Earth","    % knows those by heart? Therefore, we create a dirname/fullname","    % map, to allow users to enter the full toolbox name as well","    tb_name_map = get_tb_name_map();","","","    % Parse and check arguments to determine mode of operation","    restoremode = false;","    querymode   = false;","","    toolbox   = 'all';","    state     = 'on';","    permanent = 'temporary';","","    switch nargin","        case 0","            % return states of ALL toolboxes","            querymode = true;","","        case 1","","            % Reset states","            if isstruct(varargin{1})","","                restoremode = true;","                state       = 'restore';","","                toolbox_states = varargin{1};","","                assert(nargout == 0,...","                      [msgId ':argoutcount_error'], ...","                      '%s for single input argument does not have any output arguments.',...","                      mfilename);","","                assert(isfield(toolbox_states, 'path') && ...","                       all(isfield(toolbox_states, tb_name_map(:,1))),...","                       [msgId ':invalid_tbstates_structure'], ...","                       'Input argument does not appear to be a structure generated by %s.',...","                       mfilename);","","            % Query state of single toolbox","            elseif ischar(varargin{1})","","                % Return toolbox names map","                if strcmpi(varargin{1}, 'names')","                    varargout{1} = tb_name_map;","                    return;","","                % query mode","                else","                    querymode = true;","                    toolbox   = varargin{1};","                    state     = 'query';","                end","            end","","        case {2,3}","            % Toggle state of one or more toolboxes","            toolbox   = varargin{1};","            state     = varargin{2};","            querymode = strcmpi(state, 'query');","            ","            if nargin == 3","                if ~querymode","                    permanent = varargin{3};","                else","                    warning([msgId ':permanence_na_in_querymode'],...","                            'Permanency flag ignored for ''query'' mode.');","                end","            end","","        otherwise","            error([msgId ':argincount_error'],...","                  'Too many input arguments.');","    end","","    % Cellstring of all paths makes for easier work","    paths = regexp(path, pathsep, 'split');","","    % Initialize tb states structure","    if ~restoremode","        % Load previous paths and toggle states, if any","        toolbox_states = getpref('toggleToolbox___',...            ","                                 'toolbox_states',...","                                 []);","        if isempty(toolbox_states)","            % Initialize it by storing the previous path strings...","            toolbox_states = struct('path', {paths});","","            % ...and mark all toolboxes as \"enabled\"","            rows2delete = [];","            for ii = 1:size(tb_name_map,1)","                if ~isvarname(tb_name_map{ii,1})","                    rows2delete = [rows2delete, ii];","                    continue;","                    % tb_name_map{ii,1} = strcat('validName_', tb_name_map{ii,1});","                end","                toolbox_states.(tb_name_map{ii,1}) = true;","            end","            tb_name_map(rows2delete,:) = [];","        end","    end","","    % Some asserts","    assert(iscellstr(toolbox) || ischar(toolbox),...","           [msgId ':argument_error'], [...","           'Toolboxes must be given as a string (single toolbox) or a cell array of ',...","           'strings (multiple toolboxes).']);","","    if ~restoremode","        assert(ischar(state) && any(strcmpi(state, {'on' 'enable' 'off' 'disable' 'query'})),...","               [msgId ':argument_error'],...","               'State must be a string equal to ''on''/''enable'', ''off''/''disable'', or ''query''.');","    end","","    assert(ischar(permanent) && any(strcmpi(permanent, {'permanent', 'temporary'})),...","           [msgId ':argument_error'],...","           'Permanency must be indicated via string ''perpanent'' or ''temporary''.');","","","    % Apply name map","    if isempty(toolbox) || any(strcmpi(toolbox, 'all'))","        toolbox = tb_name_map(:,1);","","    else","        if ~iscell(toolbox)","            toolbox = {toolbox}; end","","        % Check names and perform lookups","        tb_name_map_i = cellfun(@lower, tb_name_map, 'UniformOutput', false);","        toolbox_i     = cellfun(@lower, toolbox,     'UniformOutput', false);","","        dirs           = ismember(toolbox_i, tb_name_map_i(:,1));","        [isname,names] = ismember(toolbox_i, tb_name_map_i(:,2));","","        assert(all(dirs | isname),...","               [msgId ':unknown_toolbox'],...","               'Toolbox: ''%s'' does not seem to be installed.',...","               toolbox{find( ~(dirs | isname), 1, 'first')});","","        toolbox(isname) = tb_name_map(names(isname),1);","    end","","","    % Query mode: return current toggle states","    if querymode","        % ALL toolboxes","        if isempty(toolbox)","            setpref('toggleToolbox___',...","                    'toolbox_states',...","                    toolbox_states);","            varargout{1}   = toolbox_states;","","        % SOME toolboxes","        else","            for ii = 1:numel(toolbox)","                toolbox_state.(toolbox{ii}) = toolbox_states.(toolbox{ii}); end","            varargout{1} = toolbox_state;","        end","        return;","    end","","","    %% Toggle all requested toolboxes","    % ====================================================","","    toolbox_states_out = toolbox_states;","","    switch lower(state)","","        case {'off' 'disable'}","            ","            % NOTE (Rody Oldenhuis): make sure the 'MATLAB' \"toolbox\"","            % is excluded, otherwise, MATLAB becomed unusable      ","            toolbox(strcmpi(toolbox, 'MATLAB')) = [];","            if isempty(toolbox)","                warning([msgId ':matlab_toolbox_must_stay'],...","                        'The ''MATLAB'' toolbox can not be disabled.');","                return;","            end","            ","            % Walk by all selected toolboxes and switch them off            ","            for ii = 1:numel(toolbox)","","                tb = toolbox{ii};","","                if isfield(toolbox_states, tb) && ~toolbox_states.(tb)","                    warning([msgId ':toolbox_already_switched_off'],...","                            'Toolbox ''%s'' already switched off; ignoring.',...","                            tb);","                else","                    % Remove whole toolbox from path","                    toolbox_states.(tb) = false;","                    inds  = ~cellfun('isempty', ...","                                     strfind(paths, fullfile(matlabroot, 'toolbox', tb))); %#ok<STRCL1>","                    rmpath(paths{inds});","                end","","            end","","","        case {'on' 'enable' 'restore'}","","            switched = false;","","            for ii = 1:numel(toolbox)","","                tb = toolbox{ii};","","                if ~isfield(toolbox_states, toolbox{ii})","                    warning([msgId ':toolbox_not_switched_off'],...","                            'Toolbox ''%s'' was not switched off; ignoring.',...","                            tb);","                else","                    switched = true;","                end","","                % Just set toggle state","                toolbox_states.(tb) = true;","","            end","","            % Preserve path order:","            % - restore whole path","            % - then re-disable relevant toolboxes","            if switched","","                newPaths = ~ismember(paths, toolbox_states.path);","                if ~any(newPaths)","                    % No new paths have been added","                    path( sprintf('%s;', toolbox_states.path{1:end-1}),...","                          toolbox_states.path{end} );","                    paths = toolbox_states.path;","                else","                    % TODO: wouldn't it be better to \"simply\" merge the paths?","                    warning([msgId ':new_paths_added'],[ ...","                            'New directories have been added to the path between consecutive ',...","                            '''on''/''off'' calls to %s. The path will be restored to that prior to ',...","                            'the first ''off'' call to %s, which will effectively remove these ',...","                            'new directories from the path.'],...","                            mfilename, mfilename);","                end","","                toolboxes = fieldnames(toolbox_states);","                toolboxes = toolboxes(~strcmp(toolboxes, 'path'));","","                for jj = 1:numel(toolboxes)","                    tb = toolboxes{jj};","                    if ~toolbox_states.(tb)","                        inds  = ~cellfun('isempty',...","                                         strfind(paths, fullfile(matlabroot, 'toolbox', tb))); %#ok<STRCL1>","                        rmpath(paths{inds});","                    end","                end","","            end","","    end","","    %% Finish up","    % ====================================================","","    % Save toggle states and previous paths","    setpref('toggleToolbox___',...","            'toolbox_states',...","            toolbox_states);","","    % Make changes permanent when requested","    switch lower(permanent)","        case 'temporary'","            % noop; the default","        case 'permanent'","            savepath();","    end","","    if ~restoremode","        varargout{1} = toolbox_states_out; end","","    % Update toolbox cache","    rehash toolboxcache","","end","","function tb_name_map = get_tb_name_map()","","    persistent tb_map","    if isempty(tb_map)","","        disp('First call; collecting toolbox information. Please wait...');","","        % Cellstring of all paths makes for easier work","        paths = regexp(path, pathsep, 'split');","","        % Get list of toolbox directory names","        tbs = dir(fullfile(matlabroot, 'toolbox'));","        tbs = tbs(3:end);","        tb_dirnames = {tbs.name}';","","        % Get the full toolbox names","        S(numel(tb_dirnames)) = struct('Name',    '',...","                                       'Version', '',...","                                       'Release', '',...","                                       'Date',    '');","","        for ii = 1:numel(tb_dirnames)","","            tb_dirname = tb_dirnames{ii};","","            % Add toolbox (could have been removed from path, in which case","            % ver() will not find it)","            tb_dir = fullfile(matlabroot, 'toolbox', tb_dirname);","            inds = ~cellfun('isempty', ...","                            strfind(paths, tb_dir)); %#ok<STRCL1>","","            if ~any(inds)","                addpath(genpath(tb_dir)); end","","            % Get toolbox information via ver()","            % NOTE: (Rody Oldenhuis) 'fixpoint' has been renamed to ","            % 'fixedpoint' in an unknown MATLAB version, resulting in a","            % warning if you use the old name. Introduce some","            % version-specific code here: ","            if strcmpi(tb_dirname, 'fixpoint') && ~verLessThan('matlab', '9.1')","                % TODO: update to the first version actually giving the warning                                       ","                tb_version = ver('fixedpoint');                ","            else","                tb_version = ver(tb_dirname);","            end","            ","            if ~isempty(tb_version)","                S(ii) = tb_version; end","","        end","","        tb_fullnames = {S.Name}';","","        % Some dirs may not be toolboxes; slice those off","        tb_slice = ~cellfun('isempty', tb_fullnames);","","        tb_fullnames = tb_fullnames(tb_slice);","        tb_dirnames  = tb_dirnames (tb_slice);","","        % Collect terms","        tb_map = [tb_dirnames tb_fullnames];","","        % Reset path","        path(sprintf('%s;', paths{1:end-1}), paths{end});","","    end","","    tb_name_map = tb_map;","","end",""],"CoverageDisplayDataPerLine":{"Function":[{"LineNumber":88,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":384,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false}],"Statement":[{"LineNumber":94,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":97,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":98,"Hits":0,"StartColumnNumbers":25,"EndColumnNumbers":47,"ContinuedLine":true},{"LineNumber":104,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":108,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":109,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":111,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":112,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":113,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":115,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":116,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":118,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":120,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":123,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":125,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":126,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":128,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":130,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":131,"Hits":0,"StartColumnNumbers":22,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":132,"Hits":0,"StartColumnNumbers":22,"EndColumnNumbers":88,"ContinuedLine":true},{"LineNumber":133,"Hits":0,"StartColumnNumbers":22,"EndColumnNumbers":33,"ContinuedLine":true},{"LineNumber":135,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":136,"Hits":0,"StartColumnNumbers":23,"EndColumnNumbers":69,"ContinuedLine":true},{"LineNumber":137,"Hits":0,"StartColumnNumbers":23,"EndColumnNumbers":60,"ContinuedLine":true},{"LineNumber":138,"Hits":0,"StartColumnNumbers":23,"EndColumnNumbers":90,"ContinuedLine":true},{"LineNumber":139,"Hits":0,"StartColumnNumbers":23,"EndColumnNumbers":34,"ContinuedLine":true},{"LineNumber":142,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":145,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":146,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":147,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":151,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":152,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":153,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":157,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":159,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":160,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":161,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":163,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":164,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":165,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":167,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":168,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":75,"ContinuedLine":true},{"LineNumber":173,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":174,"Hits":0,"StartColumnNumbers":18,"EndColumnNumbers":47,"ContinuedLine":true},{"LineNumber":178,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":181,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":183,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":184,"Hits":0,"StartColumnNumbers":33,"EndColumnNumbers":49,"ContinuedLine":true},{"LineNumber":185,"Hits":0,"StartColumnNumbers":33,"EndColumnNumbers":37,"ContinuedLine":true},{"LineNumber":186,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":188,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":191,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":192,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":193,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":194,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":195,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":198,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":200,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":205,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":206,"Hits":0,"StartColumnNumbers":11,"EndColumnNumbers":39,"ContinuedLine":true},{"LineNumber":207,"Hits":0,"StartColumnNumbers":11,"EndColumnNumbers":85,"ContinuedLine":true},{"LineNumber":208,"Hits":0,"StartColumnNumbers":11,"EndColumnNumbers":45,"ContinuedLine":true},{"LineNumber":210,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":211,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":92,"ContinuedLine":false},{"LineNumber":212,"Hits":0,"StartColumnNumbers":15,"EndColumnNumbers":40,"ContinuedLine":true},{"LineNumber":213,"Hits":0,"StartColumnNumbers":15,"EndColumnNumbers":104,"ContinuedLine":true},{"LineNumber":216,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":83,"ContinuedLine":false},{"LineNumber":217,"Hits":0,"StartColumnNumbers":11,"EndColumnNumbers":36,"ContinuedLine":true},{"LineNumber":218,"Hits":0,"StartColumnNumbers":11,"EndColumnNumbers":86,"ContinuedLine":true},{"LineNumber":222,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":223,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":226,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":227,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":230,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":77,"ContinuedLine":false},{"LineNumber":231,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":77,"ContinuedLine":false},{"LineNumber":233,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":234,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":236,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":237,"Hits":0,"StartColumnNumbers":15,"EndColumnNumbers":41,"ContinuedLine":true},{"LineNumber":238,"Hits":0,"StartColumnNumbers":15,"EndColumnNumbers":63,"ContinuedLine":true},{"LineNumber":239,"Hits":0,"StartColumnNumbers":15,"EndColumnNumbers":61,"ContinuedLine":true},{"LineNumber":241,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":246,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":248,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":249,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":250,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":true},{"LineNumber":251,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":true},{"LineNumber":252,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":256,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":257,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":258,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":260,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":267,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":269,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":271,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":275,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":276,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":277,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":278,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":71,"ContinuedLine":true},{"LineNumber":279,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":283,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":285,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":287,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":288,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":289,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":76,"ContinuedLine":true},{"LineNumber":290,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":32,"ContinuedLine":true},{"LineNumber":293,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":294,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":295,"Hits":0,"StartColumnNumbers":37,"EndColumnNumbers":90,"ContinuedLine":true},{"LineNumber":296,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":302,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":304,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":306,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":308,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":310,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":311,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":312,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":76,"ContinuedLine":true},{"LineNumber":313,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":32,"ContinuedLine":true},{"LineNumber":315,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":319,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":326,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":328,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":329,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":331,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":332,"Hits":0,"StartColumnNumbers":26,"EndColumnNumbers":53,"ContinuedLine":true},{"LineNumber":333,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":336,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":337,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":94,"ContinuedLine":true},{"LineNumber":338,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":101,"ContinuedLine":true},{"LineNumber":339,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":96,"ContinuedLine":true},{"LineNumber":340,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":61,"ContinuedLine":true},{"LineNumber":341,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":344,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":345,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":347,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":348,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":349,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":350,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":351,"Hits":0,"StartColumnNumbers":41,"EndColumnNumbers":94,"ContinuedLine":true},{"LineNumber":352,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":364,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":365,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":true},{"LineNumber":366,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":true},{"LineNumber":369,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":370,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":372,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":373,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":376,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":377,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":380,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":386,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":387,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":389,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":392,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":395,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":396,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":397,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":400,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":401,"Hits":0,"StartColumnNumbers":39,"EndColumnNumbers":52,"ContinuedLine":true},{"LineNumber":402,"Hits":0,"StartColumnNumbers":39,"EndColumnNumbers":52,"ContinuedLine":true},{"LineNumber":403,"Hits":0,"StartColumnNumbers":39,"EndColumnNumbers":54,"ContinuedLine":true},{"LineNumber":405,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":407,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":411,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":412,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":413,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":52,"ContinuedLine":true},{"LineNumber":415,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":416,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":423,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":425,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":427,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":430,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":431,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":435,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":438,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":440,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":441,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":444,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":447,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":451,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false}]}}