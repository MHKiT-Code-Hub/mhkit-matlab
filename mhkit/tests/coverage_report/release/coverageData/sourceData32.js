var sourceData32 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/dolfyn/tools/dolfyn_plot.m","RawFileContents":["function dolfyn_plot(ds, field, options)","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%     Plot fields from Dolfyn generated data structures","%","% Parameters","% ------------","%     ds: structure","%         Structure from the binary instrument data","%     field: string","%         field from ds to be plotted (ex: 'vel')","%     dim: int (optional)","%         for higher dimension fields, which dimension should be plotted","%     title: string (optional)","%         Title for the plot","%","%     call with options -> dolfyn_plot(ds,'vel','dim',1,'title','My plot')","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","    arguments","        ds","        field","        options.dim = -1;","        options.title = '';","    end","","    assert(isstruct(ds),['ds must be a structure generated from one of '...","        'the dolfyn.io functions'])","","    assert(isfield(ds,'attrs'),['It looks like ds was not generated from ' ...","        'one of the dolfyn.io functions'])","","    assert(isfield(ds,field),'The specified field is not present in ds')","","    x_d = length(size(ds.(field).data));","    max_dim = size(ds.(field).data); max_dim = max_dim(end);","","    if x_d > 2","        assert(options.dim >= 1, ['For this field you must specify ' ...","            'which dimension you would like to plot'])","        assert(options.dim <= max_dim, ['The dimension you have ' ...","            'specified is greater than the maximum dimension, %d'],max_dim)","    end","","    if ~isempty(options.title)","        assert(isstring(options.title) || ischar(options.title), ...","            'Title must be character or string')","    end","","    switch x_d","        case 2","        % Plot 1D data","        if contains(string(ds.(field).dims{1}),\"time\")","            x_data = datetime(ds.(field).coords.(ds.(field).dims{1}),...","                'convertfrom','posixtime');","        else","            x_data = ds.(field).coords.(ds.(field).dims{1});","        end","        y_data = ds.(field).data;","","        plot(x_data, y_data)","        xlabel(ds.(field).dims{1},'Interpreter', 'none')","        y_label = string(field);","        if isfield(ds.(field),'units') && ~isempty(ds.(field).units)","            y_label = y_label + \" [\" + string(ds.(field).units) + \"]\";","        end","        ylabel(y_label,'Interpreter', 'none');","","","        case 3","        % Plot 2D data","        if contains(string(ds.(field).dims{1}),\"time\")","            x_data = datetime(ds.(field).coords.(ds.(field).dims{1}),...","                'convertfrom','posixtime');","        else","            x_data = ds.(field).coords.(ds.(field).dims{1});","        end","        y_data = ds.(field).data(:,:,options.dim);","","        plot(x_data, y_data)","        xlabel(ds.(field).dims{1},'Interpreter', 'none')","        y_label = string(field);","        if isfield(ds.(field),'units') && ~isempty(ds.(field).units)","            y_label = y_label + \" [\" + string(ds.(field).units) + \"]\";","        end","        ylabel(y_label,'Interpreter', 'none');","        if ~isempty(options.title)","            title(options.title);","        else","            title(strcat(ds.(field).dims{2},\" = \",...","                ds.(field).coords.(ds.(field).dims{2}){options.dim}))","        end","","        case 4","        % Plot 3D data","        if contains(string(ds.(field).dims{1}),\"time\")","            x_data = datetime(ds.(field).coords.(ds.(field).dims{1}),...","                'convertfrom','posixtime');","        else","            x_data = ds.(field).coords.(ds.(field).dims{1});","        end","        y_dat = ds.(field).coords.(ds.(field).dims{2});","        z_dat = squeeze(ds.(field).data(:,:,:,options.dim))';","","        surf(x_data, y_dat, z_dat, 'edgecolor','none')","        view(2)","        xlabel(ds.(field).dims{1},'Interpreter', 'none')","        ylabel(strcat(ds.(field).dims{2},\" [m]\"),'Interpreter', 'none')","        if ~isempty(options.title)","            title(options.title);","        else","            try","                title(strcat(ds.(field).dims{3},\" = \",...","                    ds.(field).coords.(ds.(field).dims{3}){options.dim}))","            catch","                title(strcat(ds.(field).dims{3},\" = \", string(...","                    ds.(field).coords.(ds.(field).dims{3})(options.dim))))","            end","        end","        colormap(bluewhitered)","        cb = colorbar;","        cb_label = string(field);","        if isfield(ds.(field),'units') && ~isempty(ds.(field).units)","            cb_label = cb_label + \" [\" + string(ds.(field).units) + \"]\";","        end","        cb.Label.String = cb_label;","    end","","end","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},"Statement":[{"LineNumber":22,"Hits":0,"StartColumnNumbers":22,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":23,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":26,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":27,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":true},{"LineNumber":29,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":30,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":42,"ContinuedLine":true},{"LineNumber":32,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":34,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":35,"Hits":[0,0],"StartColumnNumbers":[4,37],"EndColumnNumbers":[36,60],"ContinuedLine":false},{"LineNumber":37,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":38,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":39,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":54,"ContinuedLine":true},{"LineNumber":40,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":41,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":75,"ContinuedLine":true},{"LineNumber":44,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":45,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":46,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":48,"ContinuedLine":true},{"LineNumber":49,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":50,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":52,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":53,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":54,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":true},{"LineNumber":56,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":58,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":60,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":61,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":62,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":63,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":64,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":66,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":69,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":71,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":72,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":73,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":true},{"LineNumber":75,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":77,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":79,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":80,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":81,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":82,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":83,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":85,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":86,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":87,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":89,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":90,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":69,"ContinuedLine":true},{"LineNumber":93,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":95,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":96,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":97,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":true},{"LineNumber":99,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":101,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":102,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":104,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":105,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":106,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":107,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":108,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":109,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":111,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":112,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":113,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":73,"ContinuedLine":true},{"LineNumber":114,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":115,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":116,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":74,"ContinuedLine":true},{"LineNumber":119,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":120,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":121,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":122,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":123,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":125,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false}]}}