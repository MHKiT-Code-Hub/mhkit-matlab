var sourceData79 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/river/IO/delft_3d/delft_3d_get_layer_data.m","RawFileContents":["function result_struct = delft_3d_get_layer_data(delft_3d_py_object, variable, layer)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%","% Returns layer data from a Delft 3D netCDF object.","%","% Parameters","% ------------","%    delft_3d_py_object: py.netCDF4._netCDF4.Dataset","%       A netCDF python object.","%    variable: string","%       Variable in the Delft3D output","%    layer: int","%       Layer index","%","% Returns","% ---------","%    result_struct: struct","%        A struct containing the layer data with fields corresponding to the","%        DataFrame columns, including the DataFrame itself stored as 'df'.","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","    % Guard to check type of delft_3d_py_object","    if ~isa(delft_3d_py_object, 'py.netCDF4._netCDF4.Dataset')","        error('MATLAB:delft_3d_get_layer_data:InvalidInput', 'Input must be a py.netCDF4._netCDF4.Dataset object.');","    end","","    % Guard to check type of variable","    if ~isstring(variable)","        error('MATLAB:delft_3d_get_layer_data:InvalidInput', 'Variable must be a string.');","    end","","    % Guard to check type of layer","    if ~isnumeric(layer) || ~isscalar(layer) || layer ~= fix(layer)","        error('MATLAB:delft_3d_get_layer_data:InvalidInput', 'Layer must be a scalar integer.');","    end","","","    % Call Python function to get layer data","    python_result = py.mhkit.river.io.d3d.get_layer_data(delft_3d_py_object, variable, py.int(int64(layer)));","","    % Convert Python DataFrame to struct with vectorized conversion","    result_struct = convert_numeric_dataframe_to_struct(python_result);","    result_struct.df = python_result;","end",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":85,"ContinuedLine":false},"Statement":[{"LineNumber":25,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":26,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":116,"ContinuedLine":false},{"LineNumber":30,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":31,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":91,"ContinuedLine":false},{"LineNumber":35,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":36,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":96,"ContinuedLine":false},{"LineNumber":41,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":109,"ContinuedLine":false},{"LineNumber":44,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":45,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":37,"ContinuedLine":false}]}}