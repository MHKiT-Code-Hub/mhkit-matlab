var sourceData155 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/wave/IO/hindcast/request_wpto.m","RawFileContents":["function data = request_wpto(data_type, parameter, lat_lon, year, api_key)\r","\r","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r","%\r","%     Returns data from the WPTO wave hindcast hosted on AWS at the specified latitude and longitude point(s),\r","%     or the closest available pont(s).\r","%     Visit https://registry.opendata.aws/wpto-pds-us-wave/ for more information about the dataset and available\r","%     locations and years.\r","%     NOTE: To access the WPTO hindcast data, you will need to configure h5pyd for data access on HSDS.\r","%     Please see the WPTO_hindcast_example notebook for more information.\r","%\r","%     Parameters\r","%     ----------\r","%         data_type : string\r","%             Data set type of interest\r","%             Options: \"3-hour\" \"1-hour\"\r","%         parameter: string or list of strings\r","%             Dataset parameter to be downloaded\r","%             3-hour dataset options: 'directionality_coefficient', 'energy_period', 'maximum_energy_direction'\r","%                 'mean_absolute_period', 'mean_zero-crossing_period', 'omni-directional_wave_power', 'peak_period'\r","%                 'significant_wave_height', 'spectral_width', 'water_depth'\r","%             1-hour dataset options: 'directionality_coefficient', 'energy_period', 'maximum_energy_direction'\r","%                 'mean_absolute_period', 'mean_zero-crossing_period', 'omni-directional_wave_power', 'peak_period'\r","%                 'significant_wave_height', 'spectral_width', 'water_depth', 'maximim_energy_direction',\r","%                 'mean_wave_direction', 'frequency_bin_edges', 'directional_wave_spectrum'\r","%         lat_lon: tuple or list of tuples\r","%             Latitude longitude pairs at which to extract data.\r","%         year : float\r","%             Year to be accessed. The years 1979-2010 available.\r","%         api_key : string\r","%             API key obtained from https://developer.nrel.gov/signup/\r","%\r","%      Returns\r","%      -------\r","%         data : struct\r","%             Data indexed by datetime with columns named for parameter and cooresponding metadata index\r","%\r","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r","\r","    if ~isa(data_type,'string') & ~isa(data_type,'char')\r","        error('ERROR: data_type must be a string or char')\r","    end\r","    if ~isstring(parameter)\r","        error('ERROR: parameter must be a string or string array')\r","    end\r","    if ~isa(lat_lon,'numeric')\r","        error('ERROR: lat_lon must be a double or double array')\r","    end\r","    if ~isa(year, 'numeric')\r","        error('ERROR: year must be numeric')\r","    end\r","    if ~isa(api_key,'string') & ~isa(api_key,'char')\r","        error('ERROR: api_key must be a string or string array')\r","    end\r","\r","\r","    % set weboptions\r","    options = weboptions('Timeout',30);\r","\r","    % determine region of lat_lon\r","    region = region_selection(lat_lon,data_type);\r","\r","    % set domain\r","    if isequal(data_type,'1-hour')\r","        dom = ['&domain=%2Fnrel%2FUS_wave%2Fvirtual_buoy%2F' region '%2F' region '_virtual_buoy_' num2str(year) '.h5'];\r","    elseif isequal(data_type,'3-hour')\r","        dom = ['&domain=%2Fnrel%2FUS_wave%2F' region '%2F' region '_wave_' num2str(year) '.h5'];\r","    end\r","\r","    % get links to the databases\r","    baseURL = ['https://developer.nrel.gov/api/hsds/?api_key=' api_key dom];\r","    root = cached_webread(baseURL,options);\r","    groupsURL = ['https://developer.nrel.gov/api/hsds/groups/' root.root '/links?api_key=' api_key dom];\r","    groups = cached_webread(groupsURL,options);\r","    groups = struct2table(groups.links);\r","\r","    % get standard parameters\r","    if isequal(data_type, \"1-hour\")\r","        vars = [\"time_index\",\"meta\",\"coordinates\",\"frequency\",\"direction\"];\r","    else\r","        vars = [\"time_index\",\"meta\",\"coordinates\"];\r","    end\r","    for i=1:length(vars)\r","        ID = groups.id(find(strcmpi(vars(i),groups.title)));\r","        URL = ['https://developer.nrel.gov/api/hsds/datasets/' ID{:} '/value?api_key=' api_key dom];\r","        temp = cached_webread(URL,options);\r","        if isequal(vars{i},\"time_index\")\r","            standard_params.(vars(i)) = datetime(temp.value,'InputFormat','yyyy-MM-dd HH:mm:ssXXX',...\r","                'TimeZone','UTC');\r","        else\r","            standard_params.(vars(i)) = temp.value;\r","        end\r","    end\r","\r","    % find index for each location\r","    for y = 1:size(lat_lon,1)\r","        gid = lat_lon(y,:);\r","        radius = [abs(standard_params.coordinates(:,1)-gid(1)) abs(standard_params.coordinates(:,2)-gid(2))];\r","        radius(:,3) = sqrt(radius(:,1).^2 + radius(:,2).^2);\r","        idx(y) = find(radius(:,3)==min(radius(:,3))); % find index of closest location\r","    end\r","\r","    % create metadata struct & get parameter data\r","    fns_meta = [\"water_depth\",\"latitude\",\"longitude\",\"distance_to_shore\",\"timezone\",\"jurisdiction\"];\r","    for y=1:length(idx)\r","        for x=1:length(fns_meta)\r","            fd = standard_params.meta{idx(y)};\r","            meta(y).(fns_meta{x}) = fd{x};\r","        end\r","        for z = 1:length(parameter)\r","            paramID = groups.id(find(strcmpi(parameter(z),groups.title)));\r","            if isequal(parameter(z),'directional_wave_spectrum')\r","                continue\r","            else\r","                paramURL = ['https://developer.nrel.gov/api/hsds/datasets/' paramID{:} '/value?api_key=' api_key '&select=[:,' num2str(idx(y)-1) ']' dom];\r","            end\r","            param = cached_webread(paramURL,options);\r","            data(y).(parameter(z)) = param.value;\r","        end\r","    end\r","\r","    % handle extraction of directional wave spectrum if requested\r","    time_length = length(standard_params.time_index);\r","    if contains('directional_wave_spectrum',parameter)\r","        for y = 1:length(idx)\r","            for z = 1:time_length/486\r","                i1 = num2str((z-1)*486);\r","                i2 = num2str(z*486);\r","                paramURL = ['https://developer.nrel.gov/api/hsds/datasets/' paramID{:} '/value?api_key=' api_key '&select=[' i1 ':' i2 ',:,:,' num2str(idx(y)-1) ']' dom];\r","                param = cached_webread(paramURL,options);\r","                try\r","                    dws = cat(1,dws,param.value);\r","                catch\r","                    dws = param.value;\r","                end\r","            end\r","            data(y).directional_wave_spectrum = dws;\r","            clear dws\r","        end\r","    end\r","\r","    % create final output struct for data\r","    for i=1:length(idx)\r","        data(i).time = standard_params.time_index;\r","        if contains('directional_wave_spectrum',parameter)\r","            data(i).frequency = standard_params.frequency;\r","            data(i).direction = standard_params.direction;\r","        end\r","        data(i).metadata = meta(i);\r","    end\r","end\r","\r",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":74,"ContinuedLine":false},"Statement":[{"LineNumber":40,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":41,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":43,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":44,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":46,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":47,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":49,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":50,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":52,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":53,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":58,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":61,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":64,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":65,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":119,"ContinuedLine":false},{"LineNumber":66,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":67,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":96,"ContinuedLine":false},{"LineNumber":71,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":72,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":73,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":104,"ContinuedLine":false},{"LineNumber":74,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":75,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":78,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":79,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":81,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":83,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":84,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":85,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":100,"ContinuedLine":false},{"LineNumber":86,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":87,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":88,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":98,"ContinuedLine":false},{"LineNumber":89,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":34,"ContinuedLine":true},{"LineNumber":91,"Hits":6,"StartColumnNumbers":12,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":96,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":97,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":98,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":109,"ContinuedLine":false},{"LineNumber":99,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":100,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":104,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":100,"ContinuedLine":false},{"LineNumber":105,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":106,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":107,"Hits":18,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":108,"Hits":18,"StartColumnNumbers":12,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":110,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":111,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":112,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":113,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":115,"Hits":4,"StartColumnNumbers":16,"EndColumnNumbers":154,"ContinuedLine":false},{"LineNumber":117,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":118,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":123,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":124,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":125,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":126,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":127,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":128,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":129,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":170,"ContinuedLine":false},{"LineNumber":130,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":131,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":132,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":133,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":134,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":137,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":138,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":143,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":144,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":145,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":146,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":147,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":149,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false}]}}