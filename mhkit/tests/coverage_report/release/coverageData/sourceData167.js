var sourceData167 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/wave/performance/power_matrix.m","RawFileContents":["function PM=power_matrix(LM,JM)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%","%     Generates a power matrix from a capture length matrix and wave energy","%     flux matrix","%","% Parameters","% ------------","%     LM: Capture Length","%        Pandas data frame","%           To make a pandas data frame from user supplied frequency and spectra","%           use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(Hm0_bins,L)","%","%        OR","%","%        structure of form:","%","%           LM.values","%","%           LM.stat","%","%           LM.Hm0_bins","%","%           LM.Te_bins","%","%","%     JM: Wave Energy Flux","%        Pandas data frame","%           To make a pandas data frame from user supplied frequency and spectra","%           use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(Hm0_bins,J)","%","%        OR","%","%        structure of form:","%","%           JM.values: Wave energy flux matrix","%","%           JM.Hm0_bins","%","%           JM.Te_bins","%","% Returns","% ---------","%     PM: Structure","%","%","%         PM.values: Power matrix","%","%         PM.stat: statistic of the matrix (i.e. \"mean\", \"max\", etc.)","%         (string)","%","%         PM.Hm0_bins","%","%         PM.Te_bins","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","py.importlib.import_module('mhkit');","py.importlib.import_module('mhkit_python_utils');","","% need to add asserts for pandas","if (isa(LM,'py.pandas.core.frame.DataFrame')~=1)","    x=size(LM.values);","","    li=py.list();","    if x(2)>1","        for i = 1:x(2)","            app=py.list(LM.values(:,i));","            li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","","        end","    end","","    LMpan=py.mhkit_python_utils.pandas_dataframe.timeseries_to_pandas(li,py.list(LM.Hm0_bins),int32(x(2)));","","end","","if (isa(JM,'py.pandas.core.frame.DataFrame')~=1)","    x=size(JM.values);","    li=py.list();","    if x(2)>1","        for i = 1:x(2)","            app=py.list(JM.values(:,i));","            li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","","        end","    end","    JMpan=py.mhkit_python_utils.pandas_dataframe.timeseries_to_pandas(li,py.list(JM.Hm0_bins),int32(x(2)));","end","","PMpan=py.mhkit.wave.performance.power_matrix(LMpan,JMpan);","","% convert vals1d to original shape","vals=double(py.array.array('d',py.numpy.nditer(PMpan.values)));","sha=cell(PMpan.values.shape);","x=int64(sha{1,1});","y=int64(sha{1,2});","vals=reshape(vals,[y,x]);","vals=transpose(vals);","","PM.values=vals;","PM.stat=LM.stat;","PM.Hm0_bins=double(LM.Hm0_bins);","PM.Te_bins=double(LM.Te_bins);","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},"Statement":[{"LineNumber":59,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":60,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":63,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":64,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":66,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":67,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":68,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":69,"Hits":9,"StartColumnNumbers":12,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":70,"Hits":9,"StartColumnNumbers":12,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":75,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":107,"ContinuedLine":false},{"LineNumber":79,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":80,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":81,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":82,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":83,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":84,"Hits":9,"StartColumnNumbers":12,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":85,"Hits":9,"StartColumnNumbers":12,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":89,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":107,"ContinuedLine":false},{"LineNumber":92,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":95,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":96,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":97,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":98,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":99,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":100,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":102,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":103,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":104,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":105,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false}]}}