var sourceData160 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB-2/mhkit/wave/resource/elevation_spectrum.m","RawFileContents":["function S=elevation_spectrum(ts,sample_rate,nnft,time,options)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%   Calculates wave spectra from wave probe timeseries","%    ","% Parameters","% ------------","%     ts: matrix or table","%           Wave probe time-series data, with each column a different time","%           series","%","%     sample_rate: float","%           Data frequency (Hz)","%","%     nnft: integer","%           Number of bins in the Fast Fourier Transform","%","%     time: vector or table","%           time (s)","%","%     window: string (Optional)","%        Signal window type. \"hamming\" is used by default given the broadband ","%        nature of waves. See scipy.signal.get_window for more options.","%        to call: elevation_spectrum(ts,sample_rate,nnft,time,\"window\",window)","%","%     detrend: logical (Optional)","%        Specifies if a linear trend is removed from the data before calculating ","%        the wave energy spectrum.  Data is detrended by default.","%        to call: elevation_spectrum(ts,sample_rate,nnft,time,\"detrend\",detrend)","%","%     noverlap: integer (Optional)","%       Number of points to overlap between segments. If None,","%       noverlap = nperseg / 2.  Defaults to None.","%       to call: elevation_spectrum(ts,sample_rate,nnft,time,\"noverlap\",noverlap)","%","% Returns","% ---------","%     S: structure","%","%","%         S.spectrum: vector or matrix Spectral Density (m^2/Hz) per probe           ","%","%         S.type: 'Spectra from Time Series'","%","%         S.frequency: frequency [Hz] ","%","%         S.sample_rate: sample_rate","%","%         S.nnft: nnft","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","arguments","    ts ","    sample_rate","    nnft","    time","    options.window = \"hamming\";","    options.detrend = true;","    options.noverlap = py.None;","end","","py.importlib.import_module('mhkit');","% py.importlib.import_module('numpy');","py.importlib.import_module('pandas');","py.importlib.import_module('mhkit_python_utils');","if (isa(ts,'py.pandas.core.frame.DataFrame')~=1)","    if (isa(ts,'table')==1)","        ts=table2array(ts);","    end","    if (isa(time,'table')==1)","        time=table2array(time);","    end","    x=size(ts);","    li=py.list();","    if x(2)>1 ","        for i = 1:x(2)","            app=py.list(ts(:,i));","            li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","        end  ","        ts=py.mhkit_python_utils.pandas_dataframe.timeseries_to_pandas(li,time,int32(x(2)));        ","","    elseif x(2)==1","       ts=py.mhkit_python_utils.pandas_dataframe.timeseries_to_pandas(py.list(ts),time,int32(x(2))); ","       ","    end","    ","end","nnft=int32(nnft);","","","spectra=py.mhkit.wave.resource.elevation_spectrum(ts,sample_rate,nnft,pyargs('window',options.window,'detrend',options.detrend,'noverlap',options.noverlap));"," vals=double(py.array.array('d',py.numpy.nditer(spectra.values)));"," sha=cell(spectra.values.shape);"," x=int64(sha{1,1});"," y=int64(sha{1,2});"," vals=reshape(vals,[x,y]);","","","S.spectrum=vals;","","S.type='Spectra from Timeseries';","","S.frequency=double(py.array.array('d',py.numpy.nditer(spectra.index))).';","S.sample_rate=sample_rate;","S.nnft=nnft;","","    ",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},"Statement":[{"LineNumber":58,"Hits":1,"StartColumnNumbers":21,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":59,"Hits":1,"StartColumnNumbers":22,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":60,"Hits":1,"StartColumnNumbers":23,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":63,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":65,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":66,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":67,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":68,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":69,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":71,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":72,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":74,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":75,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":76,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":77,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":78,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":79,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":81,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":92,"ContinuedLine":false},{"LineNumber":83,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":84,"Hits":2,"StartColumnNumbers":7,"EndColumnNumbers":100,"ContinuedLine":false},{"LineNumber":89,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":92,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":157,"ContinuedLine":false},{"LineNumber":93,"Hits":2,"StartColumnNumbers":1,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":94,"Hits":2,"StartColumnNumbers":1,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":95,"Hits":2,"StartColumnNumbers":1,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":96,"Hits":2,"StartColumnNumbers":1,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":97,"Hits":2,"StartColumnNumbers":1,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":100,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":102,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":104,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":105,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":106,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false}]}}