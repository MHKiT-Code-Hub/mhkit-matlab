var sourceData20 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB-2/mhkit/dolfyn/rotate/inst2earth.m","RawFileContents":["function ds = inst2earth(advo,reverse,make)","%     Rotate data in an ADV object to the earth from the instrument","%     frame (or vice-versa).","%","%     Parameters","%     ----------","%     advo : The adv object containing the data.","%","%     reverse : bool (default: False)","%            If True, this function performs the inverse rotation","%            (earth->inst).","%","%     make : char","%       awac, vector, signature, rdi","","if strcmpi(make,'awac')","    ds = inst2earth_awac();","elseif strcmpi(make,'vector')","    ds = inst2earth_vector();","elseif strcmpi(make, 'signature')","    ds = inst2earth_signature();","elseif strcmpi(make, 'rdi')","    ds = inst2earth_rdi();","end","","    function out = inst2earth_awac()","        if reverse % earth -> inst","            % The transpose of the rotation matrix gives the inverse","            % rotation, so we simply reverse the order of the einsum:","            sumstr = 'dcab,dceb->dcea';%'jik,j...k->i...k';","            cs_now = 'earth';","            cs_new = 'inst';","        else % inst->earth","            sumstr = 'dcba,dceb->dcea'; %'ijk,j...k->i...k';","            cs_now = 'inst';","            cs_new = 'earth';","        end","","        if isfield(advo.attrs, 'rotate_vars')","            rotate_vars = advo.attrs.rotate_vars;","        else","            rotate_vars = {'vel'};","        end","","        cs = lower(advo.coord_sys);","        if strcmp(cs,cs_new)","            return;","        elseif ~strcmp(cs, cs_now)","            msgtext = [\"Data must be in the '%s' frame when using this \"...","                \"function.\", cs_now];","            ME = MException('MATLAB:dolfyn:inst2earth',msgtext);","            throwAsCaller(ME)","        end","","        if isfield(advo, 'orientmat')","            omat = advo.orientmat.data;","        else","            if contains(lower(data_set.attrs.inst_model),'vector')","                orientation_down = advo.orientation_down;","            else","                orientation_down = nan;","            end","            omat = calc_omat(advo.heading.data,...","                             advo.pitch.data,...","                             advo.roll.data,...","                             orientation_down);","        end","","        % Take the transpose of the orientation to get the inst->earth rotation","        % matrix.","        rmat = permute(omat, [1 2 4 3]);","        det_form = permute(omat, [4 3 2 1]);","        determinate = 0;","        for i = 1:length(det_form)","            determinate = determinate + det(det_form(:,:,:,i));","        end","        determinate = determinate - length(det_form);","        if determinate > 1e-3","            warning(\"Invalid orientation matrix (determinant != 1) \" + ...","                \"in inst2earth\")","        end","","        for qq = 1:numel(rotate_vars)","            nm = rotate_vars{qq};","            n = size(advo.(nm).data);","            n = n(end);","            if n ~= 3","                msgtext = [\"The entry %s is not a vector, it cannot be \"...","                    \"rotated.\", nm];","                ME = MException('MATLAB:inst2earth',msgtext);","                throwAsCaller(ME)","            end","            advo.(nm).data = tensorproduct(rmat,advo.(nm).data,sumstr);","        end","        advo.coord_sys = cs_new;","        advo.attrs.coord_sys = cs_new;","        advo = set_coords(advo, cs_new);","        out = advo;","    end","","    function out = inst2earth_vector()","        if reverse % earth -> inst","            % The transpose of the rotation matrix gives the inverse","            % rotation, so we simply reverse the order of the einsum:","            sumstr = 'dab,dcb->dca';%'jik,j...k->i...k';","            cs_now = 'earth';","            cs_new = 'inst';","        else % inst->earth","            sumstr = 'dba,dcb->dca'; %'ijk,j...k->i...k';","            cs_now = 'inst';","            cs_new = 'earth';","        end","","        if isfield(advo.attrs, 'rotate_vars')","            rotate_vars = advo.attrs.rotate_vars;","        else","            rotate_vars = {'vel'};","        end","","        cs = lower(advo.coord_sys);","        if strcmp(cs,cs_new)","            return;","        elseif ~strcmp(cs, cs_now)","            msgtext = [\"Data must be in the '%s' frame when using this \"...","                \"function.\", cs_now];","            ME = MException('MATLAB:dolfyn:inst2earth',msgtext);","            throwAsCaller(ME)","        end","","        if isfield(advo, 'orientmat')","            omat = advo.orientmat.data;","        else","            if contains(lower(advo.attrs.inst_model),'vector')","                orientation_down = advo.orientation_down.data;","            else","                orientation_down = nan;","            end","            omat = calc_omat(advo.heading.data,...","                             advo.pitch.data,...","                             advo.roll.data,...","                             orientation_down);","        end","","        % Take the transpose of the orientation to get the inst->earth rotation","        % matrix.","        rmat = permute(omat, [1 2 4 3]);","        det_form = permute(omat, [4 3 2 1]);","        determinate = 0;","        for i = 1:length(det_form)","            determinate = determinate + det(det_form(:,:,:,i));","        end","        determinate = determinate - length(det_form);","        if determinate > 1e-3","            warning(\"Invalid orientation matrix (determinant != 1) \" + ...","                \"in inst2earth\")","        end","        rmat = squeeze(rmat);","","        for qq = 1:numel(rotate_vars)","            nm = rotate_vars{qq};","            n = size(advo.(nm).data);","            n = n(end);","            if n ~= 3","                msgtext = [\"The entry %s is not a vector, it cannot be \"...","                    \"rotated.\", nm];","                ME = MException('MATLAB:inst2earth',msgtext);","                throwAsCaller(ME)","            end","            advo.(nm).data = tensorproduct(rmat,advo.(nm).data,sumstr);","        end","        advo.coord_sys = cs_new;","        advo.attrs.coord_sys = cs_new;","        advo = set_coords(advo, cs_new);","        out = advo;","    end","","    function out = inst2earth_signature()","        if reverse % earth -> inst","            % The transpose of the rotation matrix gives the inverse","            % rotation, so we simply reverse the order of the einsum:","            sumstr = 'dac,dbc->dba';%'jik,j...k->i...k';","            cs_now = 'earth';","            cs_new = 'inst';","        else % inst->earth","            sumstr = 'dca,dbc->dba'; %'ijk,j...k->i...k';","            cs_now = 'inst';","            cs_new = 'earth';","        end","","        if isfield(advo.attrs, 'orientation')","            if strcmpi(advo.attrs.orientation, 'down')","                down = true;","            else","                down = false;","            end","        end","","        if isfield(advo.attrs, 'rotate_vars')","            rotate_vars = advo.attrs.rotate_vars;","        else","            rotate_vars = {'vel'};","        end","","        cs = lower(advo.coord_sys);","        if strcmp(cs,cs_new)","            return;","        elseif ~strcmp(cs, cs_now)","            msgtext = [\"Data must be in the '%s' frame when using this \"...","                \"function.\", cs_now];","            ME = MException('MATLAB:read_nortek:set_declination:rotate2'...","                ,msgtext);","            throwAsCaller(ME)","        end","","        if isfield(advo, 'orientmat')","            omat = advo.orientmat.data;","        else","            omat = euler2orient( advo.heading.data,...","                                 advo.pitch.data,...","                                 advo.roll.data);","        end","","        % Take the transpose of the orientation to get the inst->earth rotation","        % matrix.","        rmat = permute(omat, [1 2 4 3]);","        det_form = permute(omat, [4 3 2 1]);","        determinate = 0;","        for i = 1:length(det_form)","            determinate = determinate + det(det_form(:,:,:,i));","        end","        determinate = determinate - length(det_form);","        if determinate > 1e-3","            warning(\"Invalid orientation matrix (determinant != 1) \" + ...","                \"in inst2earth\")","        end","","        % The dictionary of rotation matrices for different sized arrays.","        rmd_3 = rmat;","","        % The 4-row rotation matrix assume that rows 0,1 are u,v,","        % and 2,3 are independent estimates of w.","        tmp = zeros([length(rmat),1,4,4],\"double\");","        tmp(:,:,1:3,1:3) = rmd_3;","        % Copy row 3 to row 4","        tmp(:,:,1:2,4) = rmat(:,:,1:2,3);","        tmp(:,:,4,4) = rmat(:,:,3,3);","        % Extend rows 1 and 2","        tmp(:,:,3,1) = rmat(:,:,3,1)./2.;","        tmp(:,:,4,1) = rmat(:,:,3,1)./2.;","","        tmp(:,:,3,2) = rmat(:,:,3,2)./2.;","        tmp(:,:,4,2) = rmat(:,:,3,2)./2.;","","        rmd_3 = squeeze(rmd_3);","        rmd_4 = tmp;","","        if reverse","            % 3-element inverse handled by sumstr definition (transpose)","            step1 = squeeze(permute(rmd_4,[3,4,1,2]));","            % matlab cant invert n-d matricies","            shape = size(step1);","            step2 = zeros(shape);","            for kk = 1:shape(3)","                step2(:,:,kk) = inv(step1(:,:,kk));","            end","            step3 = reshape(step2,[shape(1:2),1,shape(3)]);","            rmd_4 = permute(step3,[4,3,1,2]);","        end","","        for qq = 1:numel(rotate_vars)","            nm = rotate_vars{qq};","            dat = advo.(nm).data;","            shape = size(dat);","            n = shape(end);","            otherdims = repmat({':'},1,length(shape)-1);","            % Nortek documents sign change for upside-down instruments","            if down","                if ~reverse","                    for kk = 2:n","                        dat(otherdims{:},kk) = dat(otherdims{:},kk) .* -1.;","                    end","                    if n == 3","                        dat = tensorproduct(rmd_3,dat,sumstr);","                    elseif n == 4","                        dat = tensorproduct(rmd_4,dat,'dcba,dceb->dcea');","                    else","                        msgtext = [\"The entry %s is not a vector, it \" +...","                            \"cannot be rotated.\", nm];","                        ME = MException('MATLAB:inst2earth',msgtext);","                        throwAsCaller(ME)","                    end","                else","                    if n == 3","                        dat = tensorproduct(rmd_3,dat,sumstr);","                    elseif n == 4","                        dat = tensorproduct(rmd_4,dat,'dcba,dceb->dcea');","                    else","                        msgtext = [\"The entry %s is not a vector, it \" +...","                            \"cannot be rotated.\", nm];","                        ME = MException('MATLAB:inst2earth',msgtext);","                        throwAsCaller(ME)","                    end","                    for kk = 2:n","                        dat(otherdims{:},kk) = dat(otherdims{:},kk) .* -1.;","                    end","                end","            else % 'up' and AHRS","                if n == 3","                    dat = tensorproduct(rmd_3,dat,sumstr);","                elseif n == 4","                    dat = tensorproduct(rmd_4,dat,'dcba,dceb->dcea');","                else","                    msgtext = [\"The entry %s is not a vector, it \" + ...","                            \"cannot be rotated.\", nm];","                        ME = MException('MATLAB:inst2earth',msgtext);","                        throwAsCaller(ME)","                end","            end","            advo.(nm).data = dat;","        end","","        advo = set_coords(advo, cs_new);","        advo.coord_sys = cs_new;","        advo.attrs.coord_sys = cs_new;","        out = advo;","    end","","    function out = inst2earth_rdi()","        % Rotate velocities from the instrument to earth coordinates.","        %","        % This function also rotates data from the 'ship' frame, into the","        % earth frame when it is in the ship frame (and","        % ``adcpo.use_pitchroll == 'yes'``). It does not support the","        % 'reverse' rotation back into the ship frame.","        %","        % Parameters","        % ----------","        % adpo : The ADP object containing the data.","        %","        % reverse : bool (default: False)","        %        If True, this function performs the inverse rotation","        %        (earth->inst).","        % fixed_orientation : bool (default: False)","        %     When true, take the average orientation and apply it over the","        %     whole record.","        % force : bool (default: False)","        %     When true do not check which coordinate system the data is in","        %     prior to performing this rotation.","        %","        % Notes","        % -----","        % The rotation matrix is taken from the Teledyne RDI ADCP Coordinate","        % Transformation manual January 2008","        csin = lower(advo.coord_sys);","        cs_allowed = {'inst', 'ship'};","        if reverse","            cs_allowed = {'earth'};","        end","","        if ~any(strcmpi(csin, cs_allowed))","            msgtext = [\"Invalid rotation for data in %s coordinate system.\"...","                , csin];","            ME = MException('MATLAB:read_nortek:set_declination:rotate2'...","                ,msgtext);","            throwAsCaller(ME)","        end","","        if isfield(advo, 'orientmat')","            omat = advo.orientmat.data;","        else","            omat = calc_orientmat(advo);","        end","","        % rollaxis gives transpose of orientation matrix.","        % The 'rotation matrix' is the transpose of the 'orientation matrix'","        % NOTE: the double 'rollaxis' within this function, and here, has","        % minimal computational impact because np.rollaxis returns a","        % view (not a new array)","        rmat = permute(omat, [1 2 4 3]);","        if reverse % earth -> inst","            sumstr4 = 'dcab,dceb->dcea';%'jik,j...k->i...k';","            sumstr3 = 'dcab,deb->dea';","            cs_new = 'inst';","        else % inst->earth","            sumstr4 = 'dcba,dceb->dcea'; %'ijk,j...k->i...k';","            sumstr3 = 'dcba,deb->dea';","            cs_new = 'earth';","        end","","        % Only operate on the first 3-components, b/c the 4th is err_vel","        for qq = 1:numel(advo.attrs.rotate_vars)","            nm = advo.attrs.rotate_vars{qq};","            dat = advo.(nm).data;","            n = length(size(dat));","            otherdims = repmat({':'},1,n-1);","            dat = advo.(nm).data(otherdims{:},1:3);","            if n == 3","                sumstr = sumstr3;","            else","                sumstr = sumstr4;","            end","            advo.(nm).data(otherdims{:},1:3) = ...","                tensorproduct(rmat,dat,sumstr);","        end","","        advo = set_coords(advo, cs_new);","        advo.coord_sys = cs_new;","        advo.attrs.coord_sys = cs_new;","        out = advo;","    end","end","",""],"CoverageDisplayDataPerLine":{"Function":[{"LineNumber":1,"Hits":27,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":26,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":101,"Hits":9,"StartColumnNumbers":4,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":177,"Hits":7,"StartColumnNumbers":4,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":328,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false}],"Statement":[{"LineNumber":16,"Hits":27,"StartColumnNumbers":0,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":17,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":18,"Hits":22,"StartColumnNumbers":0,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":19,"Hits":9,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":20,"Hits":13,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":21,"Hits":7,"StartColumnNumbers":4,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":22,"Hits":6,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":23,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":27,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":30,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":31,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":32,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":34,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":35,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":36,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":39,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":40,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":42,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":45,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":46,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":47,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":48,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":49,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":50,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":37,"ContinuedLine":true},{"LineNumber":51,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":52,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":55,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":56,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":58,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":59,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":61,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":63,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":64,"Hits":0,"StartColumnNumbers":29,"EndColumnNumbers":44,"ContinuedLine":true},{"LineNumber":65,"Hits":0,"StartColumnNumbers":29,"EndColumnNumbers":43,"ContinuedLine":true},{"LineNumber":66,"Hits":0,"StartColumnNumbers":29,"EndColumnNumbers":47,"ContinuedLine":true},{"LineNumber":71,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":72,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":73,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":74,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":75,"Hits":500,"StartColumnNumbers":12,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":77,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":78,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":79,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":80,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":true},{"LineNumber":83,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":84,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":85,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":86,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":87,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":88,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":89,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":true},{"LineNumber":90,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":91,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":93,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":95,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":96,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":97,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":98,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":102,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":105,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":106,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":107,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":109,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":110,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":111,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":114,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":115,"Hits":9,"StartColumnNumbers":12,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":117,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":120,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":121,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":122,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":123,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":124,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":125,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":37,"ContinuedLine":true},{"LineNumber":126,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":127,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":130,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":131,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":133,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":134,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":136,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":138,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":139,"Hits":1,"StartColumnNumbers":29,"EndColumnNumbers":44,"ContinuedLine":true},{"LineNumber":140,"Hits":1,"StartColumnNumbers":29,"EndColumnNumbers":43,"ContinuedLine":true},{"LineNumber":141,"Hits":1,"StartColumnNumbers":29,"EndColumnNumbers":47,"ContinuedLine":true},{"LineNumber":146,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":147,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":148,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":149,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":150,"Hits":900,"StartColumnNumbers":12,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":152,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":153,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":154,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":155,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":true},{"LineNumber":157,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":159,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":160,"Hits":15,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":161,"Hits":15,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":162,"Hits":15,"StartColumnNumbers":12,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":163,"Hits":15,"StartColumnNumbers":12,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":164,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":165,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":36,"ContinuedLine":true},{"LineNumber":166,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":167,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":169,"Hits":15,"StartColumnNumbers":12,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":171,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":172,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":173,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":174,"Hits":9,"StartColumnNumbers":8,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":178,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":181,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":182,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":183,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":185,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":186,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":187,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":190,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":191,"Hits":7,"StartColumnNumbers":12,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":192,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":194,"Hits":4,"StartColumnNumbers":16,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":198,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":199,"Hits":7,"StartColumnNumbers":12,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":201,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":204,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":205,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":206,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":207,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":208,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":209,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":37,"ContinuedLine":true},{"LineNumber":210,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":211,"Hits":0,"StartColumnNumbers":17,"EndColumnNumbers":26,"ContinuedLine":true},{"LineNumber":212,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":215,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":216,"Hits":6,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":218,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":219,"Hits":1,"StartColumnNumbers":33,"EndColumnNumbers":48,"ContinuedLine":true},{"LineNumber":220,"Hits":1,"StartColumnNumbers":33,"EndColumnNumbers":49,"ContinuedLine":true},{"LineNumber":225,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":226,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":227,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":228,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":229,"Hits":700,"StartColumnNumbers":12,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":231,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":232,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":233,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":234,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":true},{"LineNumber":238,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":242,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":243,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":245,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":246,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":248,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":249,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":251,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":252,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":254,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":255,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":257,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":259,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":261,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":262,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":263,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":264,"Hits":300,"StartColumnNumbers":16,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":266,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":267,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":270,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":271,"Hits":45,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":272,"Hits":45,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":273,"Hits":45,"StartColumnNumbers":12,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":274,"Hits":45,"StartColumnNumbers":12,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":275,"Hits":45,"StartColumnNumbers":12,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":277,"Hits":45,"StartColumnNumbers":12,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":278,"Hits":21,"StartColumnNumbers":16,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":279,"Hits":14,"StartColumnNumbers":20,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":280,"Hits":30,"StartColumnNumbers":24,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":282,"Hits":14,"StartColumnNumbers":20,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":283,"Hits":12,"StartColumnNumbers":24,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":284,"Hits":2,"StartColumnNumbers":20,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":285,"Hits":2,"StartColumnNumbers":24,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":287,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":288,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":54,"ContinuedLine":true},{"LineNumber":289,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":290,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":293,"Hits":7,"StartColumnNumbers":20,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":294,"Hits":6,"StartColumnNumbers":24,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":295,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":296,"Hits":1,"StartColumnNumbers":24,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":298,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":299,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":54,"ContinuedLine":true},{"LineNumber":300,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":301,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":303,"Hits":7,"StartColumnNumbers":20,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":304,"Hits":15,"StartColumnNumbers":24,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":308,"Hits":24,"StartColumnNumbers":16,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":309,"Hits":20,"StartColumnNumbers":20,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":310,"Hits":4,"StartColumnNumbers":16,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":311,"Hits":4,"StartColumnNumbers":20,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":313,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":314,"Hits":0,"StartColumnNumbers":28,"EndColumnNumbers":54,"ContinuedLine":true},{"LineNumber":315,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":316,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":319,"Hits":45,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":322,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":323,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":324,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":325,"Hits":7,"StartColumnNumbers":8,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":354,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":355,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":356,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":357,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":360,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":361,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":362,"Hits":0,"StartColumnNumbers":18,"EndColumnNumbers":24,"ContinuedLine":true},{"LineNumber":363,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":364,"Hits":0,"StartColumnNumbers":17,"EndColumnNumbers":26,"ContinuedLine":true},{"LineNumber":365,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":368,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":369,"Hits":6,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":371,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":379,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":380,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":381,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":382,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":383,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":385,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":386,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":387,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":391,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":392,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":393,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":394,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":395,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":396,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":397,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":398,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":400,"Hits":6,"StartColumnNumbers":16,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":402,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":403,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":47,"ContinuedLine":true},{"LineNumber":406,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":407,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":408,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":409,"Hits":6,"StartColumnNumbers":8,"EndColumnNumbers":19,"ContinuedLine":false}]}}