var sourceData150 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/wave/IO/NDBC/NDBC_request_data.m","RawFileContents":["function ndbc_data=NDBC_request_data(parameter,filenames)","","%%%%%%%%%%%%%%%%%%%%","%     Requests data by filenames and returns a structure of structures","%     for each filename passed. If filenames for a single buoy are passed","%     then the yearly structures in the returned structure (ndbc_data) are","%     indexed by year (e.g. ndbc_data.year_2004). If multiple buoy ids are","%     passed then the returned dictionary is indexed by buoy id and year","%     (e.g. ndbc_data['46022']['2014']).","%","%","% Parameters","% ------------","%     parameter : string","%         'swden'  : 'Raw Spectral Wave Current Year Historical Data'","%         'stdmet' : 'Standard Meteorological Current Year Historical Data'","%","%     filenames : array of strings","%         Data filenames on https://www.ndbc.noaa.gov/data/historical/{parameter}/","%","%     proxy : None","%         Parameter is now deprecated.","%         To request data from behind a firewall, configure in MATLAB","%         Preferences by navigating to:","%           Home -> Environment -> Preferences","%         then:","%           MATLAB -> Web -> Use a proxy server to connect to the Internet","%         See the following for details:","%           https://www.mathworks.com/help/matlab/import_export/proxy.html","%","% Returns","% ---------","%     ndbc_data: Structure","%         Structure of structures broken down by buoy and years of data.","%","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","arguments","    parameter string {mustBeMember(parameter,{'swden','stdmet'})}","    filenames (1,:) string","end","","MAX_RETRIES = 5;                         % number of query retries if error","","for i = 1:length(filenames)","    % Formulate query","    data_url = \"https://www.ndbc.noaa.gov/data/historical/\";","    api_query = strcat(parameter, '/', filenames(i));","","    % Submit query and get data","    for j = 0:MAX_RETRIES","        try","            response = webread(data_url + api_query);","            break;","        catch ME","            if i == MAX_RETRIES","                disp(['MATLAB:NDBC_request_data: ', ME.identifier]);","                rethrow(ME)","            else","                pause(1);   % pause(seconds) and retry query","            end","        end","    end","","    % Write compressed data to temporary file","    compressed_filename = fullfile(tempdir, filenames(i));","    fileID = fopen(compressed_filename, 'w');","    fwrite(fileID, response);","    fclose(fileID);","","    % Unzip temporary GNU zip (.gz) file","    uncompressed_filename = gunzip(compressed_filename);","","    % Read uncompressed delimited data file to a table","    % (suppress warning of '.'s being converted to 'x_'s in table header)","    warning('off', 'MATLAB:table:ModifiedAndSavedVarnames');","    file_table = readtable(uncompressed_filename{1}, ...","        'ReadVariableNames', true, ...","        'VariableNamesLine', 1, ...","        'ExtraColumnsRule', 'ignore');  % ignore extra columns data w/o headings","    warning('on', 'MATLAB:table:ModifiedAndSavedVarnames');","    file_header = file_table.Properties.VariableDescriptions;   % includes '.'s","","    % Delete compressed and uncompressed files","    delete(compressed_filename);","    delete(uncompressed_filename{1});","","    % Parse year and station_id from filename","    [~, filename_no_extension, ~] = fileparts(uncompressed_filename{1});","    if contains(filename_no_extension, '_')","        % Handles filenames like: 42002w2008_old.txt.gz","        filename_base = extractBefore(filename_no_extension, '_');","    else","        filename_base = filename_no_extension;","    end","    year = str2double(extractAfter( ...","        filename_base, ...","        strlength(filename_base) - 4));     % grab last 4 chars","    station_id = extractBefore( ...","        filename_base, ...","        strlength(filename_base) - 5 + 1);  % grab all but last 5 chars","","    % Check for bad file data","    if width(file_table) <= 1","        warning('Bad file data for %s, skipping.', filename_base);","        continue;","    end","","    % Rename {'YY', '#YY'} columns, handle minutes and add datetime column","    headings = file_table.Properties.VariableNames;","    column_year = find(contains(headings, 'YY'), 1, 'first');","    file_table.Properties.VariableNames{column_year} = 'YYYY';","    column_minutes = find(contains(headings, 'mm'), 1, 'first');","    if isempty(column_minutes)","        minutes = 0;","    else","        minutes = file_table{:, column_minutes};","    end","    time = datetime( ...","        year, ...","        file_table.('MM'), ...","        file_table.('DD'), ...","        file_table.('hh'), ...","        minutes, ...","        0);","    column_first_freq = find(contains(file_header, '.'), 1, 'first');","    file_table = addvars(file_table, time, 'Before', column_first_freq);","    column_first_freq = column_first_freq + 1;","","    % Create data structure from the table","    if parameter == \"swden\"","        % Carry over time columns and add frequency and spectum","        data_struct = table2struct( ...","            file_table(:, 1:(column_first_freq-1)), ...","            'ToScalar', true);","        data_struct.frequency = transpose(cellfun( ...","            @str2num, ...","            file_header((column_first_freq - 1):end))); % note no time column","        data_struct.spectrum = transpose(table2array( ...","            file_table(:, column_first_freq:width(file_table)))); % [freq, time]","    else","        % Keep all columns as-is","        data_struct = table2struct(file_table, 'ToScalar', true);","    end","","    % Add data structure to aggregated output structure","    ndbc_data.(strcat('ID_', station_id)). ...","        (strcat('year_', num2str(year))) = data_struct;","end","","% Remove top structure level if there's only one buoy","field_names = fieldnames(ndbc_data);","if length(field_names) == 1","    ndbc_data = ndbc_data.(field_names{1});","end","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":57,"ContinuedLine":false},"Statement":[{"LineNumber":40,"Hits":1,"StartColumnNumbers":22,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":44,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":46,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":48,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":49,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":52,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":53,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":11,"ContinuedLine":false},{"LineNumber":54,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":55,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":56,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":57,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":58,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":59,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":61,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":67,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":68,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":69,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":70,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":73,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":77,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":78,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":79,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":true},{"LineNumber":80,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":30,"ContinuedLine":true},{"LineNumber":81,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":true},{"LineNumber":82,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":83,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":86,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":87,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":90,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":91,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":93,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":95,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":97,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":98,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":21,"ContinuedLine":true},{"LineNumber":99,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":39,"ContinuedLine":true},{"LineNumber":100,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":101,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":21,"ContinuedLine":true},{"LineNumber":102,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":42,"ContinuedLine":true},{"LineNumber":105,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":106,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":107,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":111,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":112,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":113,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":114,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":115,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":116,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":118,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":120,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":121,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":12,"ContinuedLine":true},{"LineNumber":122,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":25,"ContinuedLine":true},{"LineNumber":123,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":25,"ContinuedLine":true},{"LineNumber":124,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":25,"ContinuedLine":true},{"LineNumber":125,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":15,"ContinuedLine":true},{"LineNumber":126,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":11,"ContinuedLine":true},{"LineNumber":127,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":128,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":129,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":132,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":134,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":135,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":136,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":30,"ContinuedLine":true},{"LineNumber":137,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":138,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":20,"ContinuedLine":true},{"LineNumber":139,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":55,"ContinuedLine":true},{"LineNumber":140,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":141,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":65,"ContinuedLine":true},{"LineNumber":144,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":148,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":149,"Hits":3,"StartColumnNumbers":9,"EndColumnNumbers":55,"ContinuedLine":true},{"LineNumber":153,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":154,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":155,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false}]}}