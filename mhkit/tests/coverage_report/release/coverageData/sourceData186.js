var sourceData186 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/wave/resource/wave_celerity.m","RawFileContents":["function Cg=wave_celerity(k,h,options)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","% Calculates wave celerity (group velocity)","%","% Parameters","% ------------","%    k: wave number (1/m)","%        structure of form:","%           k.values= wave number","%","%           k.frequency= frequency (Hz)","%","%    h: double","%         Water depth (m)","%","%    g: double (optional)","%         gravitational acceleration (m/s^2)","%         to call: energy_flux(k,h,\"g\",g)","%","%    depth_check: bool (optional)","%         If True check depth regime. Default False.","%         to call: energy_flux(k,h,\"depth_check\",py.True)","%","%    ratio: double or int (optional)","%         Only applied if depth_check=True. If h/l > ratio,","%         water depth will be set to deep. Default ratio = 2","%         to call: energy_flux(k,h,\"ratio\",ratio)","%","% Returns","% -------","%     Cg: structure","%","%","%       Cg.values: water celerity","%","%       Cg.frequency [Hz]","%","%       Cg.h: height [m]","%","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","arguments","    k","    h","    options.g = 9.80665;","    options.depth_check = py.False;","    options.ratio = 2;","","end","","py.importlib.import_module('mhkit');","py.importlib.import_module('mhkit_python_utils');","","","","if (isa(k,'py.pandas.core.frame.DataFrame')~=1)","    if (isstruct(k)==1)","","            k=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(k.frequency,py.numpy.array(k.values),1);","","    else","        ME = MException('MATLAB:wave_celerity','k needs to be a structure or Pandas dataframe, use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas to create one');","        throw(ME);","    end","end","","","Cgdf=py.mhkit.wave.resource.wave_celerity(k,h,pyargs('g',options.g,...","    'depth_check',options.depth_check,'ratio',options.ratio));","","Cg.values=double(py.array.array('d',py.numpy.nditer(Cgdf.values)));","Cg.frequency=double(py.array.array('d',py.numpy.nditer(Cgdf.index)));","Cg.h=h;","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},"Statement":[{"LineNumber":47,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":48,"Hits":0,"StartColumnNumbers":26,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":49,"Hits":3,"StartColumnNumbers":20,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":53,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":54,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":58,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":59,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":61,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":111,"ContinuedLine":false},{"LineNumber":64,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":172,"ContinuedLine":false},{"LineNumber":65,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":70,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":71,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":62,"ContinuedLine":true},{"LineNumber":73,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":74,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":75,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":7,"ContinuedLine":false}]}}