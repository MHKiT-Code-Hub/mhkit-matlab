var sourceData87 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB-2/mhkit/river/resource/exceedance_probability.m","RawFileContents":["function F=exceedance_probability(Q)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%     Calculates the exceedance probability","%","% Parameters","% ----------","%     Q : Discharge data [m3/s]","%","%         Pandas dataframe indexed by time [datetime or s]","%","%           To make a pandas data frame from user supplied frequency and spectra","%           use py.mhkit_python_utils.pandas_dataframe.timeseries_to_pandas(timeseries,time,x)","%","%         OR","%","%         structure of form:","%","%           Q.Discharge","%","%           Q.time","%","% Returns","% -------","%     F : Structure","%","%","%         F.F: Exceedance probability [unitless]","%","%         F.time: time [epoch time (s)]","%","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","","py.importlib.import_module('mhkit_python_utils');","py.importlib.import_module('mhkit');","","% Check if Q is a dataframe","% If it is not, it is expecting a struct with Discharge and time \"keys\"","if (isa(Q,'py.pandas.core.frame.DataFrame')~=1)","    x=size(Q.Discharge);","    li=py.list();","    if x(2)>1","        for i = 1:x(2)","            app=py.list(Q.Discharge(:,i));","            li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","","        end","    elseif x(2) ==1","        li=Q.Discharge;","    end","","    if (~isempty(Q.time))","        if any(isdatetime(Q.time(1)))","            si=size(Q.time);","            for i=1:si(2)","            Q.time(i)=posixtime(Q.time(i));","            end","        end","    end","    % Q=py.mhkit_python_utils.pandas_dataframe.timeseries_to_pandas(li,Q.time,int32(x(2)));","","    if (~isempty(Q.time))","        Q = py.mhkit_python_utils.pandas_dataframe.list_to_series(Q.Discharge, Q.time);","    else","        Q = py.mhkit_python_utils.pandas_dataframe.list_to_series(Q.Discharge);","    end","","end","","EPpd=py.mhkit.river.resource.exceedance_probability(Q);","","xx=cell(EPpd.axes);","v=xx{2};","vv=cell(py.list(py.numpy.nditer(v.values,pyargs(\"flags\",{\"refs_ok\"}))));","","vals=double(py.array.array('d',py.numpy.nditer(EPpd.values)));","sha=cell(EPpd.values.shape);","x=int64(sha{1,1});","y=int64(sha{1,2});","","vals=reshape(vals,[x,y]);","","si=size(vals);"," for i=1:si(2)","    test=string(py.str(vv{i}));","    newname=split(test,\",\");","","    F.(newname(1))=vals(:,i);",""," end"," F.time=double(py.array.array('d',py.numpy.nditer(EPpd.index)));","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},"Statement":[{"LineNumber":36,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":37,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":41,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":42,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":43,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":44,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":45,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":46,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":47,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":50,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":51,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":54,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":55,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":56,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":57,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":58,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":64,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":65,"Hits":8,"StartColumnNumbers":8,"EndColumnNumbers":87,"ContinuedLine":false},{"LineNumber":67,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":72,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":74,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":75,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":8,"ContinuedLine":false},{"LineNumber":76,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":78,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":79,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":80,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":81,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":83,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":85,"Hits":8,"StartColumnNumbers":0,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":86,"Hits":8,"StartColumnNumbers":1,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":87,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":88,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":90,"Hits":8,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":93,"Hits":8,"StartColumnNumbers":1,"EndColumnNumbers":64,"ContinuedLine":false}]}}