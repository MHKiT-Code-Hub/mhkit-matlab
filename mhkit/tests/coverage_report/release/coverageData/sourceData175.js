var sourceData175 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/wave/resource/energy_flux.m","RawFileContents":["function J=energy_flux(S,h,options)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%","%","% Parameters","% ------------","%    S: Spectral Density (m^2/Hz)","%       structure of form:","%           S.spectrum: Spectral Density (m^2/Hz)","%","%           S.type: String of the spectra type, i.e. Bretschneider,","%           time series, date stamp etc.","%","%           S.frequency: frequency (Hz)","%","%    h: double","%         Water depth (m)","%","%    deep: logical (optional)","%         If True use the deep water approximation. Default False. When","%         False a depth check is run to check for shallow water. The ratio","%         of the shallow water regime can be changed using the ratio","%         keyword.","%         to call: energy_flux(S,h,\"deep\",py.True)","%","%    rho: double (optional)","%         water density (kg/m^3)","%         to call: energy_flux(S,h,\"rho\",rho)","%","%    g: double (optional)","%         gravitational acceleration (m/s^2)","%         to call: energy_flux(S,h,\"g\",g)","%","%    ratio: double or int (optional)","%         Only applied if depth=False. If h/l > ratio,","%         water depth will be set to deep. Default ratio = 2.","%         to call: energy_flux(S,h,\"ratio\",1.5)","% Returns","% -------","%     J: double","%         Omni-directional wave energy flux (W/m)","%","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","arguments","    S","    h","    options.deep = py.False;","    options.rho = 1025;","    options.g = 9.80665;","    options.ratio = 2;","","end","","py.importlib.import_module('mhkit');","py.importlib.import_module('mhkit_python_utils');","","% convert to dataframe","if (isa(S,'py.pandas.core.frame.DataFrame')~=1)","    if (isstruct(S)==1)","        x=size(S.spectrum);","        li=py.list();","        if x(2)>1","            for i = 1:x(2)","                app=py.list(S.spectrum(:,i));","                li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","","            end","","            S=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(S.frequency(:,1),li,int32(x(2)));","        elseif x(2)==1","            S=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(S.frequency,py.numpy.array(S.spectrum),int32(x(2)));","        end","    else","        ME = MException('MATLAB:energy_flux','S needs to be structure or a Pandas dataframe, use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas to create one');","        throw(ME);","    end","end","","","% calculate energy flux","J=py.mhkit.wave.resource.energy_flux(S,h,pyargs('rho',options.rho,'g',options.g,...","    'deep',options.deep, 'ratio',options.ratio));","","","","J=double(J.values);","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},"Statement":[{"LineNumber":50,"Hits":1,"StartColumnNumbers":19,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":51,"Hits":2,"StartColumnNumbers":18,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":52,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":53,"Hits":2,"StartColumnNumbers":20,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":57,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":58,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":61,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":62,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":63,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":64,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":65,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":66,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":67,"Hits":743,"StartColumnNumbers":16,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":68,"Hits":743,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":72,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":104,"ContinuedLine":false},{"LineNumber":73,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":74,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":123,"ContinuedLine":false},{"LineNumber":77,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":170,"ContinuedLine":false},{"LineNumber":78,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":84,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":85,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":49,"ContinuedLine":true},{"LineNumber":89,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":19,"ContinuedLine":false}]}}