var sourceData176 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/wave/resource/energy_period.m","RawFileContents":["function Te=energy_period(S,varargin)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%","%","% Parameters","% ------------","%   S: Spectral Density (m^2/Hz)","%       Pandas data frame","%           To make a pandas data frame from user supplied frequency and spectra","%           use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(frequency,spectra)","%","%       OR","%","%       structure of form:","%           S.spectrum: Spectral Density (m^2/Hz)","%","%           S.type: String of the spectra type, i.e. Bretschneider,","%           time series, date stamp etc.","%","%           S.frequency: frequency (Hz)","%","%     frequency_bins: vector (optional)","%       Bin widths for frequency of S. Required for unevenly sized bins","%","%","% Returns","% ---------","%    Te: float","%        Wave energy Period (s)","%","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","% py.importlib.import_module('numpy');","py.importlib.import_module('mhkit');","py.importlib.import_module('mhkit_python_utils');","","% assign feq_bin","if nargin == 2","    freq_bins = py.numpy.array(varargin{1});","elseif nargin == 1","    freq_bins = py.None;","else","    ME = MException('MATLAB:energy_period','Incorrect number of input arguments');","        throw(ME);","end","","% convert matlab structure to pandas.dataframe","if (isa(S,'py.pandas.core.frame.DataFrame')~=1)","    if (isstruct(S)==1)","        x=size(S.spectrum);","        li=py.list();","        if x(2)>1","            for i = 1:x(2)","                app=py.list(double(S.spectrum(:,i)));","                li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","","            end","            S=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(double(S.frequency(:,1)),li,x(2));","        elseif x(2)==1","            S=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(double(S.frequency),py.numpy.array(S.spectrum),x(2));","        end","","    else","        ME = MException('MATLAB:energy_period','S needs to be a structure or Pandas dataframe, use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas to create one');","        throw(ME);","    end","end","","% calculate enegery_period here","Te=py.mhkit.wave.resource.energy_period(S,pyargs('frequency_bins',freq_bins));","Te=double(Te.values);","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},"Statement":[{"LineNumber":36,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":37,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":40,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":41,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":42,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":43,"Hits":4,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":45,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":82,"ContinuedLine":false},{"LineNumber":46,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":50,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":51,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":52,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":53,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":54,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":55,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":56,"Hits":743,"StartColumnNumbers":16,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":57,"Hits":743,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":60,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":105,"ContinuedLine":false},{"LineNumber":61,"Hits":4,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":62,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":124,"ContinuedLine":false},{"LineNumber":66,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":172,"ContinuedLine":false},{"LineNumber":67,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":72,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":78,"ContinuedLine":false},{"LineNumber":73,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false}]}}