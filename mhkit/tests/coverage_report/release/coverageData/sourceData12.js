var sourceData12 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB-2/mhkit/dolfyn/io/write_netcdf.m","RawFileContents":["function write_netcdf(ds, filename)","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%     Write Dolfyn data set to NetCDF data structure.","%","% Parameters","% ------------","%     ds: structure","%         Structure from the binary instrument data","%","%     filename: string","%         Filename of NetCDF file to read.","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","    % Make sure that ds is a structure","    if ~isstruct(ds)","        ME = MException('MATLAB:write_netcdf','ds must be a structure');","        throw(ME);","    end","","    % Make sure that ds contains the dolyn fields","    if ~isfield(ds,'coords') || ~isfield(ds,'attrs') || ...","            ~isfield(ds,'time')","        ME = MException('MATLAB:write_netcdf',['The provided data ' ...","            'structure does not appear to have been created by dolfyn']);","        throw(ME);","    end","","    overwriteFile = true; % Default to overwriting or creating new file.","    if ~isMATLABReleaseOlderThan(\"R2021b\")","        if ~endsWith(filename, \".h5\")","            temp = extractBetween(filename,1,strfind(filename, \".\"));","            filename = join([temp{1},\"h5\"],\"\");","        end","    end","    if exist(filename, 'file')","        % Ask user if they want to overwrite the file.","        promptMessage = sprintf(['This file already exists:\\n%s\\nDo you ' ...","          'want to overwrite it?'], filename);","        titleBarCaption = 'Overwrite?';","        buttonText = questdlg(promptMessage, ...","          titleBarCaption, 'Yes', 'No', 'Yes');","        if strcmpi(buttonText, 'No')","        % User does not want to overwrite.","        % Set flag to not do the write.","        overwriteFile = false;","        end","    end","    if overwriteFile","        % File does not exist yet, or the user wants to overwrite","        % an existing file.","        if exist(filename, 'file')","            delete(filename);","        end","","        if ~isMATLABReleaseOlderThan(\"R2021b\")","            % Older versions of Matlab did not allow strings to be","            % written to netcdf so we have to use h5","            fun_map = struct(  ...","                'create',{@create_h5},...","                'write',{@write_h5},...","                'attribute',{@attr_h5});","        else","            fun_map = struct(  ...","                'create',{@create_nc},...","                'write',{@write_nc},...","                'attribute',{@attr_nc});","        end","","        % Loop through coords and create netcdf dimensions","        fields = fieldnames(ds.coords);","        dim_map = containers.Map(fields,[1:numel(fields)]);","        for qq = 1:numel(fields)","            key = fields{qq};","            n = numel(ds.coords.(key));","            if iscell(ds.coords.(key))","                temp = convertCharsToStrings(ds.coords.(key));","                type = 'string';","            else","                type = class(ds.coords.(key));","            end","            feval(fun_map.create, filename, key, {key, n}, type, true, qq);","            if iscell(ds.coords.(key))","                feval(fun_map.write, filename, key, temp);","            else","                feval(fun_map.write, filename, key, ds.coords.(key));","            end","        end","","        % List of fields to exclude from the variable write","        exclude = {'coords', 'coord_sys', 'attrs', 'time', 'hdwtime_gps'};","        % Loop through the ds fields and create the variable in the netcdf","        % file then write the data.","        fields = fieldnames(ds);","        for qq = 1:numel(fields)","            key = fields{qq};","            if ~any(strcmp(exclude,key))","                dim_fields = fieldnames(ds.(key).coords);","                dimensions = cell(1,numel(dim_fields)*2);","                for kk = 1:numel(dim_fields)","                    dimensions{(kk-1)*2 + 1} = dim_fields{kk};","                    n = numel(ds.(key).coords.(dim_fields{kk}));","                    dimensions{(kk-1)*2 + 2} = n;","                end","                % dimensions cell can now be used to create the netcdf","                % variable","                if islogical(ds.(key).data)","                    ds.(key).data = int32(ds.(key).data);","                end","                feval(fun_map.create, filename, key, dimensions,...","                    class(ds.(key).data), false);","                % Now that the variable exists we can write the data to it","                out_data = squeeze(ds.(key).data);","                feval(fun_map.write, filename, key, out_data);","                % add the units","                if isfield(ds.(key), 'units')","                    feval(fun_map.attribute, filename, key, ...","                        [ds.(key).units], false);","                else","                    feval(fun_map.attribute, filename, key, 'None', false);","                end","            end","        end","","        % Attributes","        fields = fieldnames(ds.attrs);","        for qq = 1:numel(fields)","            key = fields{qq};","            if ~isstruct(ds.attrs.(key))","                if iscell(ds.attrs.(key))","                    feval(fun_map.attribute, filename, key, ...","                        convertCharsToStrings(ds.attrs.(key)), true);","                elseif islogical(ds.attrs.(key))","                    feval(fun_map.attribute, filename, key, ...","                        int32(ds.attrs.(key)), true);","                else","                    feval(fun_map.attribute, filename, key, ...","                        ds.attrs.(key), true);","                end","            end","        end","        % Not currently functional but needed for python counterpart","        feval(fun_map.attribute, filename, 'complex_vars', [], true);","    end","    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","    % NetCDF Functions","    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","    function create_nc(filename, key, dim_cell, type, coords, ~)","        if coords","            nccreate(filename, key,'Dimensions',dim_cell,...","                'Datatype', type,'Format','netcdf4');","        else","            nccreate(filename, key,'Dimensions',dim_cell,...","                'Datatype', type,'FillValue', nan, 'Format','netcdf4');","        end","    end","","    function write_nc(filename, key, data)","        ncwrite(filename, key, data)","    end","","    function attr_nc(filename, key, attribute, attrs)","        if attrs","            ncwriteatt(filename,'/', key, attribute);","        else","            ncwriteatt(filename, key, \"units\", attribute);","        end","    end","    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","    % H5 Functions","    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","    function create_h5(filename, key, dim_cell, type, coords, id)","        loc = join(['/',key],'');","        if coords","            size = dim_cell{2};","        else","            size = zeros(1,numel(dim_cell)/2);","            dims = zeros(numel(dim_cell)/2,1);","            for i = 1:numel(dim_cell)/2","                size(i) = dim_cell{i*2};","                dims(i) = dim_map(dim_cell{(i-1)*2 + 1});","            end","        end","        h5create(filename, loc, size,'Datatype', type, 'ChunkSize', size);","        if coords","            h5writeatt(filename, loc, 'CLASS', 'DIMENSION_SCALE');","            h5writeatt(filename, loc, 'NAME', key);","            h5writeatt(filename, loc, '_Netcdf4Dimid', int32(id));","        else","            h5writeatt(filename, loc, \"_Netcdf4Coordinates\", dims);","        end","    end","","    function write_h5(filename, key, data)","        h5write(filename, join(['/',key],''), data);","    end","","    function attr_h5(filename, key, attribute, attrs)","        if attrs","            h5writeatt(filename,'/', key, attribute);","        else","            h5writeatt(filename, join(['/',key]), \"units\", attribute);","        end","    end","    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","end","",""],"CoverageDisplayDataPerLine":{"Function":[{"LineNumber":1,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":147,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":157,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":161,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":171,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":193,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":197,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":53,"ContinuedLine":false}],"Statement":[{"LineNumber":15,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":16,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":17,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":21,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":22,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":true},{"LineNumber":23,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":24,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":73,"ContinuedLine":true},{"LineNumber":25,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":28,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":29,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":30,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":31,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":32,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":35,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":37,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":38,"Hits":0,"StartColumnNumbers":10,"EndColumnNumbers":46,"ContinuedLine":true},{"LineNumber":39,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":40,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":41,"Hits":0,"StartColumnNumbers":10,"EndColumnNumbers":47,"ContinuedLine":true},{"LineNumber":42,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":45,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":48,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":51,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":52,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":55,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":58,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":59,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":37,"ContinuedLine":true},{"LineNumber":60,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":35,"ContinuedLine":true},{"LineNumber":61,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":true},{"LineNumber":63,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":64,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":37,"ContinuedLine":true},{"LineNumber":65,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":35,"ContinuedLine":true},{"LineNumber":66,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":true},{"LineNumber":70,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":71,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":72,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":73,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":74,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":75,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":76,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":77,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":79,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":81,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":82,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":83,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":85,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":90,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":93,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":94,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":95,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":96,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":97,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":98,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":99,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":100,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":101,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":102,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":106,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":107,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":109,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":110,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":49,"ContinuedLine":true},{"LineNumber":112,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":113,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":115,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":116,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":117,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":49,"ContinuedLine":true},{"LineNumber":119,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":75,"ContinuedLine":false},{"LineNumber":125,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":126,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":127,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":128,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":129,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":130,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":131,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":69,"ContinuedLine":true},{"LineNumber":132,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":133,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":134,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":53,"ContinuedLine":true},{"LineNumber":136,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":137,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":46,"ContinuedLine":true},{"LineNumber":142,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":148,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":149,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":150,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":53,"ContinuedLine":true},{"LineNumber":152,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":153,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":71,"ContinuedLine":true},{"LineNumber":158,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":162,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":163,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":165,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":172,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":173,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":174,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":176,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":177,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":178,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":179,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":180,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":183,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":184,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":185,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":186,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":187,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":189,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":194,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":198,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":199,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":201,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":70,"ContinuedLine":false}]}}