var sourceData130 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/tidal/io/request_noaa_data.m","RawFileContents":["function data=request_noaa_data(station, parameter, start_date, end_date, options)","","%     Loads NOAA current data directly from https://tidesandcurrents.noaa.gov/api/ using a","%     GET request into a structure. NOAA sets max of 31 days between start and end date.","%     See https://co-ops.nos.noaa.gov/api/ for options. All times are reported as GMT and metric","%     units are returned for data.","%","%     Parameters","%     ----------","%     station : str","%         NOAA current station number (e.g. 's08010')","%","%     parameter : str","%         NOAA paramter (e.g. 'currents')","%","%     start_date : str","%         Start date in the format yyyyMMdd","%","%     end_date : str","%         End date in the format yyyyMMdd","%","%     proxy : None","%         Parameter is now deprecated.","%         To request data from behind a firewall, configure in MATLAB","%         Preferences by navigating to:","%           Home -> Environment -> Preferences","%         then:","%           MATLAB -> Web -> Use a proxy server to connect to the Internet","%         See the following for details:","%           https://www.mathworks.com/help/matlab/import_export/proxy.html","%","%     write_json : str or None (optional)","%         Name of json file to write data","%         to call: request_noaa_data(station,parameter,start_date,end_date,\"write_json\",write_json)","%","%     Returns","%     -------","%     data : structure","%","%","%         data.id: station ID","%","%         data.name: station name","%","%         data.lat: station Latitude","%","%         data.lon: station Longitude","%","%         data.vars: this will vary depending on parameter input.","%","%         data.time: epoch time [s]","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","arguments","    station string","    parameter string","    start_date string","    end_date string","    options.write_json string = \"\";","end","","MAX_RETRIES = 5;                         % number of query retries if error","REQUIRED_FIELDS = {'id', 'name', 'lat', 'lon', 't'};    % 't' is time","MAX_DAYS_PER_QUERY = 31;","","start_datetime = datetime(start_date, ...","        'InputFormat', 'yyyyMMdd', ...","        'TimeZone', 'UTC');","end_datetime = datetime(end_date, ...","        'InputFormat', 'yyyyMMdd', ...","        'TimeZone', 'UTC');","","% Query data, splitting period as needed to not exceed NOAA's max days limit","data = struct;      % empty structure","is_first_query = true;","start_period_datetime = start_datetime;","while start_period_datetime <= end_datetime","    end_period_datetime = min(end_datetime, start_period_datetime + days(MAX_DAYS_PER_QUERY - 1));","    end_period = datestr(end_period_datetime, 'yyyymmdd');","    start_period = datestr(start_period_datetime, 'yyyymmdd');","","    % Query data in period","    [data_in_period, timeseries_fields] = request_noaa_data_restricted_duration( ...","        station, parameter, start_period, end_period, ...","        MAX_RETRIES, REQUIRED_FIELDS, MAX_DAYS_PER_QUERY);","","    if isempty(fieldnames(data_in_period)) || isempty(timeseries_fields)","        % do nothing","    elseif is_first_query","        data = data_in_period;","        is_first_query = false;","    else","        % Append to existing data structure","        for i = 1:length(timeseries_fields)","            data.(timeseries_fields{i}) = cat( ...","                1, ...  % by rows","                data.(timeseries_fields{i}), ...","                data_in_period.(timeseries_fields{i}));","        end","    end","","    start_period_datetime = end_period_datetime + days(1);","end","","% Write NOAA data to a JSON file","if options.write_json ~= \"\"","    fid = fopen(options.write_json, 'w');","    fprintf(fid, jsonencode(data));","end","","end","","function [data, timeseries_fields] = request_noaa_data_restricted_duration( ...","        station, parameter, start_date, end_date, ...","        MAX_RETRIES, REQUIRED_FIELDS, MAX_DAYS_PER_QUERY)","    % Verify dates are less than MAX_DAYS_PER_QUERY apart","    start_datetime = datetime(start_date, ...","        'InputFormat', 'yyyyMMdd', ...","        'TimeZone', 'UTC');","    end_datetime = datetime(end_date, ...","        'InputFormat', 'yyyyMMdd', ...","        'TimeZone', 'UTC');","    msg = 'Date range is greater than %d days in request_noaa_data_restricted_duration()';","    assert(days(end_datetime - start_datetime) + 1 <= MAX_DAYS_PER_QUERY, ...","        sprintf(msg, MAX_DAYS_PER_QUERY));","","    % Formulate query","    start_date = convertCharsToStrings(start_date);","    start_date = convertCharsToStrings(start_date);","    start_date = convertCharsToStrings(start_date);","    end_date = convertCharsToStrings(end_date);","    data_url = \"https://tidesandcurrents.noaa.gov/api/datagetter?\";","    api_query = \"begin_date=\" + start_date ...","                + \"&end_date=\" + end_date ...","                + \"&station=\" + station ...","                + \"&product=\" + parameter ...","                + \"&units=metric&\" ...","                + \"time_zone=gmt&\" ...","                + \"application=web_services&\" ...","                + \"format=xml\";","","    % Display query","    disp(\"Data request URL: \" + data_url + api_query)","","    % Submit query and get data","    for i = 0:MAX_RETRIES","        try","            response = webread(data_url + api_query);","            break;","        catch ME","            if i == MAX_RETRIES","                disp(['MATLAB:request_noaa_data: ', ME.identifier]);","                rethrow(ME)","            else","                pause(1);   % pause(seconds) and retry query","            end","        end","    end","","    % Organize a structure containing the metadata and timeseries data","    is_metadata_found = false;","    is_timeseries_keys_found = false;","    data_lines = strsplit(response, '\\n');","    for i = 1:length(data_lines)","        if startsWith(data_lines{i}, '<metadata')","            % Parse metadata and initialize output structure using them","            if ~is_metadata_found","                % Note: only key names of one or more letters work","                meta_names = regexp(data_lines{i}, '[a-zA-Z]+(?=\\=)', 'match');","                for j = 1:length(meta_names)","                    regex_pattern = strcat('(?<=', meta_names{j}, '\\=\")(.*?)(?=\")');","                    value = regexp(data_lines{i}, regex_pattern, 'match');","                    if meta_names{j} == \"lat\" || meta_names{j} == \"lon\"","                        data.(meta_names{j}) = str2double(value{1});","                    else","                        data.(meta_names{j}) = convertCharsToStrings(value{1});","                    end","                end","                is_metadata_found = true;","","                % Verify all required metadata is present","                for j = 1:length(REQUIRED_FIELDS)","                    if ~isfield(data, REQUIRED_FIELDS{j})","                        ME = MException('MATLAB:request_noaa_data', ...","                            strcat('Queried data from NOAA is missing field', ...","                                REQUIRED_FIELDS{j}));","                    end","                end","            end","        elseif startsWith(data_lines{i}, '<cu')","            % Parse timeseries data keys and add to output structure","            if ~is_timeseries_keys_found","                % Note: only key names of one or more letters work","                ts_keys = regexp(data_lines{i}, '[a-zA-Z]+(?=\\=)', 'match');","                timeseries_fields = [];","                for j = 1:length(ts_keys)","                    if ts_keys{j} == 't'","                        ts_field_struct.(ts_keys{j}) = 'time';","                    else","                        ts_field_struct.(ts_keys{j}) = ts_keys{j};","                    end","                    timeseries_fields = [timeseries_fields, ...","                        convertCharsToStrings(ts_field_struct.(ts_keys{j}))];    % to return","                    data.(ts_field_struct.(ts_keys{j})) = [];","                end","                is_timeseries_keys_found = true;","            end","","            % Parse data from current line and add to respective arrays in structure","            for j = 1:length(ts_keys)","                regex_pattern = strcat('(?<=', ts_keys{j}, '\\=\")(.*?)(?=\")');","                value = regexp(data_lines{i}, regex_pattern, 'match');","                if ts_keys{j} == 't'","                    value{1} = posixtime(datetime( ...","                        value{1}, ...","                        'InputFormat', 'yyyy-MM-dd HH:mm', ...","                        'TimeZone', 'UTC'));","                else","                    value{1} = str2double(value{1});","                end","                data.(ts_field_struct.(ts_keys{j}))(end+1, :) = value{1};","            end","        elseif startsWith(data_lines{i}, '<error')","            noaa_error_msg = regexp(data_lines{i}, '(?<=.error.).*(?=..error.)', 'match');","            warning('For station id %s between %s and %s, NOAA returned the error:\\n%s', ...","                station, start_date, end_date, noaa_error_msg{1});","            data = struct;      % empty structure","            timeseries_fields = [];","            break","        end","    end","end","",""],"CoverageDisplayDataPerLine":{"Function":[{"LineNumber":1,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":82,"ContinuedLine":false},{"LineNumber":114,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":115,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":true},{"LineNumber":116,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":57,"ContinuedLine":true}],"Statement":[{"LineNumber":60,"Hits":3,"StartColumnNumbers":32,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":63,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":64,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":65,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":67,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":68,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":true},{"LineNumber":69,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":true},{"LineNumber":70,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":71,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":true},{"LineNumber":72,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":true},{"LineNumber":75,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":76,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":77,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":78,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":79,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":98,"ContinuedLine":false},{"LineNumber":80,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":81,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":84,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":80,"ContinuedLine":false},{"LineNumber":85,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":52,"ContinuedLine":true},{"LineNumber":86,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":58,"ContinuedLine":true},{"LineNumber":88,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":90,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":91,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":92,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":95,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":96,"Hits":8,"StartColumnNumbers":12,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":97,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":17,"ContinuedLine":true},{"LineNumber":98,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":true},{"LineNumber":99,"Hits":8,"StartColumnNumbers":16,"EndColumnNumbers":55,"ContinuedLine":true},{"LineNumber":103,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":107,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":108,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":109,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":118,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":119,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":true},{"LineNumber":120,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":true},{"LineNumber":121,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":122,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":33,"ContinuedLine":true},{"LineNumber":123,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":27,"ContinuedLine":true},{"LineNumber":124,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":90,"ContinuedLine":false},{"LineNumber":125,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":126,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":42,"ContinuedLine":true},{"LineNumber":129,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":130,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":131,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":132,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":133,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":134,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":135,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":41,"ContinuedLine":true},{"LineNumber":136,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":true},{"LineNumber":137,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":41,"ContinuedLine":true},{"LineNumber":138,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":34,"ContinuedLine":true},{"LineNumber":139,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":34,"ContinuedLine":true},{"LineNumber":140,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":45,"ContinuedLine":true},{"LineNumber":141,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":31,"ContinuedLine":true},{"LineNumber":144,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":147,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":148,"Hits":5,"StartColumnNumbers":8,"EndColumnNumbers":11,"ContinuedLine":false},{"LineNumber":149,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":150,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":151,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":152,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":153,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":154,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":156,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":162,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":163,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":164,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":165,"Hits":5,"StartColumnNumbers":4,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":166,"Hits":11809,"StartColumnNumbers":8,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":168,"Hits":5,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":170,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":171,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":172,"Hits":20,"StartColumnNumbers":20,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":173,"Hits":20,"StartColumnNumbers":20,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":174,"Hits":20,"StartColumnNumbers":20,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":175,"Hits":10,"StartColumnNumbers":24,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":177,"Hits":10,"StartColumnNumbers":24,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":180,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":183,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":184,"Hits":25,"StartColumnNumbers":20,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":185,"Hits":5,"StartColumnNumbers":24,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":186,"Hits":5,"StartColumnNumbers":28,"EndColumnNumbers":76,"ContinuedLine":true},{"LineNumber":187,"Hits":5,"StartColumnNumbers":32,"EndColumnNumbers":53,"ContinuedLine":true},{"LineNumber":191,"Hits":11804,"StartColumnNumbers":8,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":193,"Hits":11774,"StartColumnNumbers":12,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":195,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":196,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":197,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":198,"Hits":20,"StartColumnNumbers":20,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":199,"Hits":5,"StartColumnNumbers":24,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":201,"Hits":15,"StartColumnNumbers":24,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":203,"Hits":20,"StartColumnNumbers":20,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":204,"Hits":20,"StartColumnNumbers":24,"EndColumnNumbers":77,"ContinuedLine":true},{"LineNumber":205,"Hits":20,"StartColumnNumbers":20,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":207,"Hits":5,"StartColumnNumbers":16,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":211,"Hits":11774,"StartColumnNumbers":12,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":212,"Hits":47096,"StartColumnNumbers":16,"EndColumnNumbers":77,"ContinuedLine":false},{"LineNumber":213,"Hits":47096,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":214,"Hits":47096,"StartColumnNumbers":16,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":215,"Hits":11774,"StartColumnNumbers":20,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":216,"Hits":11774,"StartColumnNumbers":24,"EndColumnNumbers":32,"ContinuedLine":true},{"LineNumber":217,"Hits":11774,"StartColumnNumbers":24,"EndColumnNumbers":57,"ContinuedLine":true},{"LineNumber":218,"Hits":11774,"StartColumnNumbers":24,"EndColumnNumbers":44,"ContinuedLine":true},{"LineNumber":220,"Hits":35322,"StartColumnNumbers":20,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":222,"Hits":47096,"StartColumnNumbers":16,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":224,"Hits":30,"StartColumnNumbers":8,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":225,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":90,"ContinuedLine":false},{"LineNumber":226,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":87,"ContinuedLine":false},{"LineNumber":227,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":66,"ContinuedLine":true},{"LineNumber":228,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":229,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":230,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":18,"ContinuedLine":false}]}}