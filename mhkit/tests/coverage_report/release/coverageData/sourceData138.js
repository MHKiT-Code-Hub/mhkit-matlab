var sourceData138 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/utils/magnitude_phase.m","RawFileContents":["function varargout=magnitude_phase(vector)","","%%%%%%%%%%%%%%%%%%%%","%     Calculates magnitude and phase in two or three dimensions","%     call -> [mag, theta] = magnitude_phase({x; y})","%     call -> [mag, theta, phi] = magnitude_phase({x; y; z})","%","% Parameters","% ------------","%     vector: cell array","%           cell array consisting of x, y, and optionally the z component","%           of vector","%       x: array_like x component","%       y: array like y component","%       z: array like z component defined positive up (Optional)","%","%% Returns","% ---------","%     varargout: array","%         depending on number of inputs it will either output an array for","%         magnitude and theta or one for magnitude, theta, and phi","%           magnitude: array - magnitude of vector","%           theta: array - radians from the x axis","%           phi: array - radians from the z-axis defined as positive up","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","arguments","    vector;","end","","% check to see if the input argument is a cell array","if any(~isa(vector, 'cell'))","    ME = MException('MATLAB:magnitude_phase','data must be a cell array ex: {x; y; z}');","    throw(ME);","end","","% check how many inputs were given (if not equal to 2 or 3 throw error)","n_output = length(vector);","if n_output ~= 2 && n_output ~= 3","    ME = MException('MATLAB:magnitude_phase','cell array can only be length 2 or 3');","    throw(ME);","end","","% make sure number of output variables matches input","if n_output ~= nargout","    ME = MException('MATLAB:magnitude_phase',\"Number of output variables doesn't match input format (3 output requested for 2d or 2 output requested for 3d)\");","    throw(ME);","end","","% Assign cells to arrays","x = vector{1,:};","y = vector{2,:};","three_d = false;","if n_output == 3","    z = vector{3,:};","    three_d = true;","end","","if three_d","    if ~isequal(length(x),length(y),length(z))","        ME = MException('MATLAB:magnitude_phase','length of x, y, and z must be equal');","        throw(ME);","    end","    mag = sqrt(x.^2 + y.^2 + z.^2);","    theta = atan2(y,x);","    phi = atan2(sqrt(x.^2 + y.^2),z);","    varargout{1} = mag; varargout{2} = theta; varargout{3} = phi;","else","    if ~isequal(length(x),length(y))","        ME = MException('MATLAB:magnitude_phase','length of x, and y must be equal');","        throw(ME);","    end","    mag = sqrt(x.^2 + y.^2);","    theta = atan2(y,x);","    varargout{1} = mag; varargout{2} = theta;","end","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},"Statement":[{"LineNumber":33,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":34,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":88,"ContinuedLine":false},{"LineNumber":35,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":39,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":40,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":41,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":85,"ContinuedLine":false},{"LineNumber":42,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":46,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":47,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":159,"ContinuedLine":false},{"LineNumber":48,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":52,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":53,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":54,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":55,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":56,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":57,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":60,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":10,"ContinuedLine":false},{"LineNumber":61,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":62,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":88,"ContinuedLine":false},{"LineNumber":63,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":65,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":66,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":67,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":68,"Hits":[2,2,2],"StartColumnNumbers":[4,24,46],"EndColumnNumbers":[23,45,65],"ContinuedLine":false},{"LineNumber":70,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":71,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":85,"ContinuedLine":false},{"LineNumber":72,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":74,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":75,"Hits":2,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":76,"Hits":[2,2],"StartColumnNumbers":[4,24],"EndColumnNumbers":[23,45],"ContinuedLine":false}]}}