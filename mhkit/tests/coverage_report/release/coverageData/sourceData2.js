var sourceData2 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/dolfyn/adp/nan_beyond_surface.m","RawFileContents":["function out = nan_beyond_surface(ds, options)","% Mask the values of 3D data (vel, amp, corr, echo) that are beyond","% the surface.","%","% Parameters","% ----------","% ds : Dataset","%   The adcp dataset to clean","% val : nan or numeric","%   Specifies the value to set the bad values to (default np.nan).","%","% Returns","% -------","% ds : Dataset","%   The adcp dataset where relevant arrays with values greater than","%   `depth` are set to NaN","%","% Notes","% -----","% Surface interference expected to happen at","% distance > range * cos(beam angle) - cell size","","    arguments","        ds","        options.val = nan;","    end","","    fn = fieldnames(ds);","    r = {};","    for qq = 1:numel(fn)","        field = fn{qq};","        if isfield(ds.(field),'coords')","            % This is a data field","            for kk = 1:numel(ds.(field).dims)","                % Check the coords for any range values","                if contains(ds.(field).dims{kk},'range')","                    r{end+1} = field;","                end","            end","        end","    end","","    if contains(lower(ds.attrs.inst_make),'nortek')","        beam_angle = 25 * (pi/180);","    else  % TRDI","        try","            beam_angle = ds.attrs.beam_angle;","        catch","            beam_angle = 20 * (pi/180);","        end","    end","","    % Surface interference distance calculated from distance of","    % transducers to surface","    if isfield(ds.attrs, 'h_deploy')","        range_limit = ((ds.depth.data-ds.attrs.h_deploy).*cos(beam_angle) ...","                        - ds.attrs.cell_size) + ds.attrs.h_deploy;","    else","        range_limit = ds.depth.data .* np.cos(beam_angle) - ...","            ds.attrs.cell_size;","    end","","    bds = ds.coords.range > range_limit; bds_shape = size(bds);","    bds = reshape(bds,[bds_shape(1),1,bds_shape(2)]);","","    % Echosounder data gets trimmed at water surface","    if any(strcmp(r,'echo'))","        bds_echo = ds.coords.range_echo > ds.depth;","        ech_shape = size(bds_echo);","        bds_echo = reshape(bds_echo,[ech_shape(1),1,ech_shape(2)]);","        ds.echo.data(ech_shape) = options.val;","        r(strncmpi(r,'echo',1)) = [];","    end","","    % Correct rest of \"range\" data for surface interference","    for qq = 1:numel(r)","        a = ds.(r{qq}).data;","        if length(size(a)) > 3","            for kk = 1:size(a,4)","                sub_list = a(:,:,:,kk);","                try  % float dtype","                    sub_list(bds) = options.val;","                catch  % int dtype","                    sub_list(bds) = 0;","                end","                a(:,:,:,kk) = sub_list;","            end","        else","            try  % float dtype","                a(bds) = options.val;","            catch  % int dtype","                a(bds) = 0;","            end","        end","        ds.(r{qq}).data = a;","    end","","    out = ds;","","end","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},"Statement":[{"LineNumber":25,"Hits":0,"StartColumnNumbers":22,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":28,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":29,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":11,"ContinuedLine":false},{"LineNumber":30,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":31,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":32,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":34,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":36,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":37,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":43,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":44,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":46,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":11,"ContinuedLine":false},{"LineNumber":47,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":48,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":49,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":55,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":56,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":57,"Hits":0,"StartColumnNumbers":24,"EndColumnNumbers":66,"ContinuedLine":true},{"LineNumber":59,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":60,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":true},{"LineNumber":63,"Hits":[0,0],"StartColumnNumbers":[4,41],"EndColumnNumbers":[40,63],"ContinuedLine":false},{"LineNumber":64,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":67,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":68,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":69,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":70,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":71,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":72,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":76,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":77,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":78,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":79,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":80,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":81,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":82,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":83,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":84,"Hits":0,"StartColumnNumbers":20,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":86,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":89,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":90,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":91,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":92,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":95,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":98,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":13,"ContinuedLine":false}]}}