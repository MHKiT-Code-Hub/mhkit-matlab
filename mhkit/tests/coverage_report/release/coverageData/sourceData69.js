var sourceData69 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/qc/qc_data_to_dataframe.m","RawFileContents":["function df = qc_data_to_dataframe(data)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%   Convert qc data structure to pandas dataframe","%","% Parameters","% ------------","%","%     data: qc data structure","%","%","%         data.values","%","%         data.time","%","% Returns","% ---------","%     results: Pandas DataFrame","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","  py.importlib.import_module('pecos');","  py.importlib.import_module('mhkit_python_utils');","","  x=size(data.values);","  li=py.list();","  if x(2)>1","    for i = 1:x(2)","      app=py.list(data.values(:,i));","      li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","    end","  elseif x(2)==1","    li=data.values;","  end","","  % This seems weird, to convert from datetime to posix to python","  % DateTimeIndex, but, whatever, it seems to work, at least for my","  % test case.","  if any(isdatetime(data.time(1)))","    data.time=posixtime(data.time);","  end","","  % Convert the data to python lists","  li = py.list(li);","  data.time = py.list(data.time);","","  df=py.mhkit_python_utils.pandas_dataframe.timeseries_to_pandas(li,data.time,int32(x(2)));","","  % One final thing to convert index to python DateTimeindex, as required by pecos","  df.index=py.pecos.utils.index_to_datetime(df.index);","","end","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":7,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},"Statement":[{"LineNumber":22,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":23,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":25,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":26,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":27,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":11,"ContinuedLine":false},{"LineNumber":28,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":29,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":30,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":32,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":33,"Hits":7,"StartColumnNumbers":4,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":39,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":40,"Hits":7,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":44,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":45,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":47,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":91,"ContinuedLine":false},{"LineNumber":50,"Hits":7,"StartColumnNumbers":2,"EndColumnNumbers":54,"ContinuedLine":false}]}}