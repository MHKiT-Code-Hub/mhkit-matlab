var sourceData47 = {"FileName":"/Users/asimms/Desktop/Programming/mhkit_matlab_simms_dev/MHKiT-MATLAB/mhkit/power/characteristics/dc_power.m","RawFileContents":["function P=dc_power(voltage,current)","","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%     Calculates the real power from DC voltage and current.","%","% Parameters","% ------------","%     voltage: Time series of  measured voltages [V]","%        Pandas data frame","%           To make a pandas data frame from user supplied frequency and spectra","%           use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(time,voltage)","%","%        OR","%","%        structure of form:","%               voltage.voltage : matrix or vector","%","%               voltage.time : time vector","%","%     current: Time series of current [A]","%        Pandas data frame","%           To make a pandas data frame from user supplied frequency and spectra","%           use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(time,current)","%","%        OR","%","%        structure of form:","%               current.current : matrix or vector","%","%               current.time : time vector","%","% Returns","% ---------","%     P: Structure","%","%","%       P.power [W]","%","%       P.gross: gross power from all lines [W]","%","%       P.time","%","%","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","","py.importlib.import_module('mhkit');","","py.importlib.import_module('mhkit_python_utils');","","if (isa(voltage,'py.pandas.core.frame.DataFrame')~=1)","    if (isstruct(voltage)==1)","        x=size(voltage.voltage);","        li=py.list();","        if x(2)> 1","            for i = 1:x(2)","                app=py.list(double(voltage.voltage(:,i)));","                li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","","            end","            voltage=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(double(voltage.time(:,1)),li,int32(x(2)));","        elseif x(2)==1","            voltage=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(double(voltage.time(:,1)),voltage.voltage,int32(x(2)));","        end","","    else","        ME = MException('MATLAB:dc_power','voltage needs to be a structure or Pandas dataframe, use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas to create one or create a structure');","        throw(ME);","    end","end","","if (isa(current,'py.pandas.core.frame.DataFrame')~=1)","    if (isstruct(current)==1)","        x=size(current.current);","        li=py.list();","        if x(2)==3","            for i = 1:x(2)","                app=py.list(double(current.current(:,i)));","                li=py.mhkit_python_utils.pandas_dataframe.lis(li,app);","","            end","            current=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(double(current.time(:,1)),li,int32(x(2)));","        elseif x(2)==1","            current=py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas(double(current.time(:,1)),current.current,int32(x(2)));","        end","","    else","        ME = MException('MATLAB:dc_power','voltage needs to be a structure or Pandas dataframe, use py.mhkit_python_utils.pandas_dataframe.spectra_to_pandas to create one or create a structure');","        throw(ME);","    end","end","","p_pd=py.mhkit.power.characteristics.dc_power(voltage,current);","vals=double(py.array.array('d',py.numpy.nditer(p_pd.values)));","sha=cell(p_pd.values.shape);","x=int64(sha{1,1});","y=int64(sha{1,2});","vals=reshape(vals,[x,y]);","si=size(vals);","% for i=1:si(2)","%     if i == si(2)","%         P.gross=vals(:,i);","%     else","%         P.power{i}=vals(:,i);","%         %P.power{i}=[P.power{i}];","%     end","%  end","P.power=vals(:,1:end-1);","P.gross=vals(:,end);","P.time=double(py.array.array('d',py.numpy.nditer(p_pd.index))).';","",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},"Statement":[{"LineNumber":46,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":48,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":50,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":51,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":52,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":53,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":54,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":55,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":56,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":57,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":60,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":119,"ContinuedLine":false},{"LineNumber":61,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":62,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":132,"ContinuedLine":false},{"LineNumber":66,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":195,"ContinuedLine":false},{"LineNumber":67,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":71,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":72,"Hits":1,"StartColumnNumbers":4,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":73,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":74,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":75,"Hits":1,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":76,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":77,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":78,"Hits":3,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":81,"Hits":1,"StartColumnNumbers":12,"EndColumnNumbers":119,"ContinuedLine":false},{"LineNumber":82,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":83,"Hits":0,"StartColumnNumbers":12,"EndColumnNumbers":132,"ContinuedLine":false},{"LineNumber":87,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":195,"ContinuedLine":false},{"LineNumber":88,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":92,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":93,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":94,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":95,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":96,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":97,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":98,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":107,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":108,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":109,"Hits":1,"StartColumnNumbers":0,"EndColumnNumbers":65,"ContinuedLine":false}]}}